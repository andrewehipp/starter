@charset "UTF-8";
.o-layout, .o-layout__item {
  position: relative;
  outline: 1px solid #f00; }
  .o-layout:after, .o-layout__item:after {
    width: 100%;
    padding: 5px 10px;
    font-size: 14px;
    line-height: 1.2;
    background: #f00;
    outline: 1px solid #f00;
    color: #fff;
    position: absolute;
    left: 0;
    bottom: 100%; }

.o-layout:after {
  /**
                     * If we have a replacement selector, tell people what it is.
                     */
  content: 'Warning: Selector `.o-layout` is deprecated, use `.o-grid` instead.'; }

.o-layout__item:after {
  /**
                     * If we have a replacement selector, tell people what it is.
                     */
  content: 'Warning: Selector `.o-layout__item` is deprecated, use `.o-grid__column` instead.'; }

/**
     * If an element has a class attribute containing two hyphens but no space
     * (i.e. only one class is being used, and it’s a Modifier), provide visual
     * feedback in the DOM.
     *
     * N.B. This isn’t bulletproof: `class="foo--bar baz"` would pass, as would
     * `class=" foo--bar"`. Use with a pinch of salt.
     */
[class*="--"]:not([class*=" "]) {
  position: relative;
  outline: 1px solid #f00; }
  [class*="--"]:not([class*=" "]):after {
    content: 'Error: Cannot have a Modifier (i.e. `.' attr(class) '`) without a Block.';
    background: #fff;
    color: #f00;
    font-family: monospace;
    white-space: nowrap;
    position: absolute;
    bottom: 100%;
    left: 0; }

/*------------------------------------*\
    #BORDER BOX
\*------------------------------------*/
/**
 * Apply global border box.
 */
*, *:before, *:after {
  box-sizing: inherit; }

html {
  box-sizing: border-box; }

/*------------------------------------*\
    #CUSTOM FONTS
\*------------------------------------*/
/**
 * List custom fonts
 */
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * Body
 */
body {
  background: #fff;
  color: #000;
  font-family: sans-serif;
  font-size: 14px;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/*------------------------------------*\
    #TYPOGRAPY
\*------------------------------------*/
/**
 * Headings
 *
 * In most cases you should avoid styling a specific heading type to have
 * custom distinct styles that would apply to all headings of that type.
 * Instead create a new component like c-heading or c-title. This may not
 * be the case when a CMS needs default headings to appear a specific way.
 */
h1, h2, h3, h4, h5, h6 {
  margin: 0 0 20px;
  line-height: 1.5; }

h1 {
  font-size: 1.57143em; }
  @media (min-width: 768px) {
    h1 {
      font-size: 2.57143em; } }

h2 {
  font-size: 1.42857em; }
  @media (min-width: 768px) {
    h2 {
      font-size: 2.14286em; } }

h3 {
  font-size: 1.28571em; }
  @media (min-width: 768px) {
    h3 {
      font-size: 1.71429em; } }

h4 {
  font-size: 1.14286em; }
  @media (min-width: 768px) {
    h4 {
      font-size: 1.28571em; } }

h5 {
  font-size: 1em; }

h6 {
  font-size: 0.85714em; }

/**
 * Paragraphs
 */
p {
  margin: 0 0 20px; }

/**
 * Lists
 */
ul, ol, dl {
  margin: 0 0 20px; }

/**
 * Link Styles
 */
a {
  color: #337ab7;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: underline; }

/**
 * Horizontal Rule
 */
hr {
  margin: 0 0 20px;
  border: solid #bfbfbf;
  border-width: 0 0 1px; }

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * [1] remove spacing below inline images.
 */
img {
  vertical-align: middle;
  margin: 0 0 20px; }

/**
 * Figure
 */
figure {
  margin: 0 0 20px; }
  figure img {
    margin-bottom: 5px; }

figcaption {
  font-size: 0.85714em;
  font-style: italic; }

/*------------------------------------*\
    #FORMS
\*------------------------------------*/
input, textarea, select {
  border: 1px solid #bfbfbf;
  border-radius: 0;
  background: #fff; }

/*------------------------------------*\
    #WRAP
\*------------------------------------*/
/**
 * A simple wrapper that crops all content that bleeds out of it
 * Usefull for preventing scrolling on the body.
 */
.o-wrap {
  overflow: hidden; }

/*------------------------------------*\
    #CONTAINER
\*------------------------------------*/
/**
 * An outer container for site content. A container should never be a child of
 * instance of it's self.
 */
.o-container {
  padding: 0 20px;
  margin: 0 auto;
  max-width: 1280px; }

/*------------------------------------*\
    #LIST UNSTYLED
\*------------------------------------*/
/**
 * Remove list styling from list
 */
.o-list-unstyled {
  list-style: none;
  margin: 0;
  padding: 0; }

/*------------------------------------*\
    #LIST INLINE
\*------------------------------------*/
/**
 * List with direct children displaying inline.
 * [1] All items except the first have padding.
 */
.o-list-inline {
  list-style: none;
  margin: 0;
  padding: 0; }
  .o-list-inline > li {
    display: inline-block;
    vertical-align: middle; }

/*------------------------------------*\
    #ISLAND
\*------------------------------------*/
/**
 * Add a nice gap below a block of content.
 */
.o-island {
  margin-bottom: 60px; }

/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * Layout row
 *
 * [1] Additional modifier classes for layout gutters.
 */
.o-grid {
  margin-right: -15px;
  margin-left: -15px; }
  .o-grid:before, .o-grid:after {
    content: ' ';
    display: table; }
  .o-grid:after {
    clear: both; }

/**
 * A layout item, used like a column
 *
 * [1] Additional modifier classes for layout gutters.
 */
.o-grid__column {
  position: relative;
  padding-right: 15px;
  padding-left: 15px;
  width: 100%;
  min-height: 1px;
  float: left; }

/**
 * Layout Columns
 */
.o-grid__column--1 {
  width: 8.33333%; }
@media (min-width: 480px) {
  .o-grid__column--1\@xs {
    width: 8.33333%; } }
@media (min-width: 768px) {
  .o-grid__column--1\@sm {
    width: 8.33333%; } }
@media (min-width: 1024px) {
  .o-grid__column--1\@md {
    width: 8.33333%; } }
@media (min-width: 1200px) {
  .o-grid__column--1\@lg {
    width: 8.33333%; } }
@media (min-width: 1500px) {
  .o-grid__column--1\@xl {
    width: 8.33333%; } }

.o-grid__column--2 {
  width: 16.66667%; }
@media (min-width: 480px) {
  .o-grid__column--2\@xs {
    width: 16.66667%; } }
@media (min-width: 768px) {
  .o-grid__column--2\@sm {
    width: 16.66667%; } }
@media (min-width: 1024px) {
  .o-grid__column--2\@md {
    width: 16.66667%; } }
@media (min-width: 1200px) {
  .o-grid__column--2\@lg {
    width: 16.66667%; } }
@media (min-width: 1500px) {
  .o-grid__column--2\@xl {
    width: 16.66667%; } }

.o-grid__column--3 {
  width: 25%; }
@media (min-width: 480px) {
  .o-grid__column--3\@xs {
    width: 25%; } }
@media (min-width: 768px) {
  .o-grid__column--3\@sm {
    width: 25%; } }
@media (min-width: 1024px) {
  .o-grid__column--3\@md {
    width: 25%; } }
@media (min-width: 1200px) {
  .o-grid__column--3\@lg {
    width: 25%; } }
@media (min-width: 1500px) {
  .o-grid__column--3\@xl {
    width: 25%; } }

.o-grid__column--4 {
  width: 33.33333%; }
@media (min-width: 480px) {
  .o-grid__column--4\@xs {
    width: 33.33333%; } }
@media (min-width: 768px) {
  .o-grid__column--4\@sm {
    width: 33.33333%; } }
@media (min-width: 1024px) {
  .o-grid__column--4\@md {
    width: 33.33333%; } }
@media (min-width: 1200px) {
  .o-grid__column--4\@lg {
    width: 33.33333%; } }
@media (min-width: 1500px) {
  .o-grid__column--4\@xl {
    width: 33.33333%; } }

.o-grid__column--5 {
  width: 41.66667%; }
@media (min-width: 480px) {
  .o-grid__column--5\@xs {
    width: 41.66667%; } }
@media (min-width: 768px) {
  .o-grid__column--5\@sm {
    width: 41.66667%; } }
@media (min-width: 1024px) {
  .o-grid__column--5\@md {
    width: 41.66667%; } }
@media (min-width: 1200px) {
  .o-grid__column--5\@lg {
    width: 41.66667%; } }
@media (min-width: 1500px) {
  .o-grid__column--5\@xl {
    width: 41.66667%; } }

.o-grid__column--6 {
  width: 50%; }
@media (min-width: 480px) {
  .o-grid__column--6\@xs {
    width: 50%; } }
@media (min-width: 768px) {
  .o-grid__column--6\@sm {
    width: 50%; } }
@media (min-width: 1024px) {
  .o-grid__column--6\@md {
    width: 50%; } }
@media (min-width: 1200px) {
  .o-grid__column--6\@lg {
    width: 50%; } }
@media (min-width: 1500px) {
  .o-grid__column--6\@xl {
    width: 50%; } }

.o-grid__column--7 {
  width: 58.33333%; }
@media (min-width: 480px) {
  .o-grid__column--7\@xs {
    width: 58.33333%; } }
@media (min-width: 768px) {
  .o-grid__column--7\@sm {
    width: 58.33333%; } }
@media (min-width: 1024px) {
  .o-grid__column--7\@md {
    width: 58.33333%; } }
@media (min-width: 1200px) {
  .o-grid__column--7\@lg {
    width: 58.33333%; } }
@media (min-width: 1500px) {
  .o-grid__column--7\@xl {
    width: 58.33333%; } }

.o-grid__column--8 {
  width: 66.66667%; }
@media (min-width: 480px) {
  .o-grid__column--8\@xs {
    width: 66.66667%; } }
@media (min-width: 768px) {
  .o-grid__column--8\@sm {
    width: 66.66667%; } }
@media (min-width: 1024px) {
  .o-grid__column--8\@md {
    width: 66.66667%; } }
@media (min-width: 1200px) {
  .o-grid__column--8\@lg {
    width: 66.66667%; } }
@media (min-width: 1500px) {
  .o-grid__column--8\@xl {
    width: 66.66667%; } }

.o-grid__column--9 {
  width: 75%; }
@media (min-width: 480px) {
  .o-grid__column--9\@xs {
    width: 75%; } }
@media (min-width: 768px) {
  .o-grid__column--9\@sm {
    width: 75%; } }
@media (min-width: 1024px) {
  .o-grid__column--9\@md {
    width: 75%; } }
@media (min-width: 1200px) {
  .o-grid__column--9\@lg {
    width: 75%; } }
@media (min-width: 1500px) {
  .o-grid__column--9\@xl {
    width: 75%; } }

.o-grid__column--10 {
  width: 83.33333%; }
@media (min-width: 480px) {
  .o-grid__column--10\@xs {
    width: 83.33333%; } }
@media (min-width: 768px) {
  .o-grid__column--10\@sm {
    width: 83.33333%; } }
@media (min-width: 1024px) {
  .o-grid__column--10\@md {
    width: 83.33333%; } }
@media (min-width: 1200px) {
  .o-grid__column--10\@lg {
    width: 83.33333%; } }
@media (min-width: 1500px) {
  .o-grid__column--10\@xl {
    width: 83.33333%; } }

.o-grid__column--11 {
  width: 91.66667%; }
@media (min-width: 480px) {
  .o-grid__column--11\@xs {
    width: 91.66667%; } }
@media (min-width: 768px) {
  .o-grid__column--11\@sm {
    width: 91.66667%; } }
@media (min-width: 1024px) {
  .o-grid__column--11\@md {
    width: 91.66667%; } }
@media (min-width: 1200px) {
  .o-grid__column--11\@lg {
    width: 91.66667%; } }
@media (min-width: 1500px) {
  .o-grid__column--11\@xl {
    width: 91.66667%; } }

.o-grid__column--12 {
  width: 100%; }
@media (min-width: 480px) {
  .o-grid__column--12\@xs {
    width: 100%; } }
@media (min-width: 768px) {
  .o-grid__column--12\@sm {
    width: 100%; } }
@media (min-width: 1024px) {
  .o-grid__column--12\@md {
    width: 100%; } }
@media (min-width: 1200px) {
  .o-grid__column--12\@lg {
    width: 100%; } }
@media (min-width: 1500px) {
  .o-grid__column--12\@xl {
    width: 100%; } }

/*------------------------------------*\
    #MEDIA
\*------------------------------------*/
/**
 * A generic layout with an item floated to the side and content block that
 * doesn't wrap underneath it.
 */
.o-media:before, .o-media:after {
  content: ' ';
  display: table; }
.o-media:after {
  clear: both; }

/**
 * Side element floats left and pushes content away. Stacks on mobile.
 *
 * [1] Flip the image to the right with modifier
 */
.o-media__graphic {
  display: block; }
  @media (min-width: 480px) {
    .o-media__graphic {
      margin-right: 20px;
      float: left; } }
  @media (min-width: 480px) {
    .o-media--flip .o-media__graphic {
      margin: 0 0 0 20px;
      float: right; } }

/**
 * Content Block
 */
.o-media__content {
  overflow: hidden; }

/*------------------------------------*\
    #LOGOS
\*------------------------------------*/
/**
 * Logo base class. Applies shared properties for all logos.
 *
 * [1] Relies on background-size to shrink large logos to smaller sizes.
 */
.c-logo {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  display: inline-block;
  vertical-align: middle;
  background: center no-repeat;
  background-size: contain; }

.c-logo--sample {
  width: 150px;
  height: 75px;
  background-image: url('http://satyr.io/150x75?text=Logo'); }

.c-logo--responsive {
  width: 100px;
  height: 60px;
  background-image: url('http://satyr.io/250x150?text=Logo'); }
  @media (min-width: 768px) {
    .c-logo--responsive {
      width: 188px;
      height: 113px; } }
  @media (min-width: 1024px) {
    .c-logo--responsive {
      width: 250px;
      height: 150px; } }

/*------------------------------------*\
    #FORM GROUP
\*------------------------------------*/
/**
 * A form group block
 */
.c-form-group {
  margin-bottom: 10px; }

.c-form-group__label {
  display: block;
  cursor: pointer;
  padding: 5px 0;
  transition: color 0.15s; }
  .c-form-group.has-error .c-form-group__label {
    color: #f00; }

/**
 * Form group inputs
 *
 * [1] When the form input is nested in a comment, like with a radio button or
 * checkbox, set the input to display inline with the label's text.
 */
.c-form-group__input {
  display: block;
  padding: 0.71429em;
  margin-bottom: 10px;
  width: 100%;
  font-family: sans-serif;
  font-size: 14px;
  line-height: 1.2;
  transition: border 0.15s; }
  .c-form-group__label .c-form-group__input {
    margin: 0 5px 0 0; }
  .c-form-group.has-error .c-form-group__input {
    border-color: #f00; }

.c-form-group__input--inline {
  display: inline-block;
  width: auto; }

/**
 * Generic text block to add text after a field, used with validation elements.
 */
.c-form-group__help-block {
  display: block;
  font-size: 0.85714em;
  margin: 0 0 20px; }

/**
 * Validation element to be used with help-block's. Behavior classes on the
 * parent determine what type of validation it is.
 */
.c-form-group__validation {
  display: block;
  padding: 0.71429em;
  border: 1px solid #bfbfbf;
  background-color: #e5e5e5;
  color: #7f7f7f;
  font-weight: bold;
  position: relative;
  transition: 0.15s; }
  .c-form-group.has-error .c-form-group__validation {
    border-color: #f00;
    background-color: #ff4d4d;
    color: #fff; }

/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/**
 * Base button class, extended by modifiers.
 */
.c-btn {
  display: inline-block;
  color: #337ab7;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: 0.15s; }

/**
 * Modifiers for the buttons
 */
.c-btn--primary {
  padding: 0.71429em 1.42857em;
  border: 0;
  background: #337ab7;
  color: #fff;
  font-weight: bold; }

/*------------------------------------*\
    #NAVIGATION
\*------------------------------------*/
/**
 * Navigation list
 */
.c-nav__list:before, .c-nav__list:after {
  content: ' ';
  display: table; }
.c-nav__list:after {
  clear: both; }

/**
 * Navigation List item
 *
 * [1] Stateful 'current' version of navigation item.
 */
.c-nav__item {
  margin-right: 10px;
  float: left; }

/**
 * Navigation link
 */
.c-nav__link {
  display: block;
  color: #337ab7; }
  .c-nav__item.is-current .c-nav__link {
    text-decoration: underline; }

/*------------------------------------*\
    #HEADER
\*------------------------------------*/
.c-header {
  padding: 20px 0;
  margin-bottom: 20px; }

/*------------------------------------*\
    #FOOTER
\*------------------------------------*/
.c-footer {
  padding: 20px 0; }

/*------------------------------------*\
    #TEXT UTILITES
\*------------------------------------*/
/**
 * Font size utilities, by default it uses the same sizes as the tags
 */
.u-h1 {
  font-size: 1.57143em; }
  @media (min-width: 768px) {
    .u-h1 {
      font-size: 2.57143em; } }

.u-h2 {
  font-size: 1.42857em; }
  @media (min-width: 768px) {
    .u-h2 {
      font-size: 2.14286em; } }

.u-h3 {
  font-size: 1.28571em; }
  @media (min-width: 768px) {
    .u-h3 {
      font-size: 1.71429em; } }

.u-h4 {
  font-size: 1.14286em; }
  @media (min-width: 768px) {
    .u-h4 {
      font-size: 1.28571em; } }

.u-h5 {
  font-size: 1em; }

.u-h6 {
  font-size: 0.85714em; }

/**
 * Text Alignment
 */
.u-text-center {
  text-align: center; }

/*------------------------------------*\
    #IMAGE UTILITIES
\*------------------------------------*/
/**
 * Image's max width conforms to the parent's width.
 */
.u-img-respond {
  max-width: 100%;
  height: auto; }

/**
 * Image matches it's containers width
 */
.u-img-full {
  width: 100%;
  height: auto; }

/*------------------------------------*\
    #VISIBILITY UTILITIES
\*------------------------------------*/
/**
 * Visibility classes for all breakpoints
 */
.u-hidden {
  display: none; }
@media (min-width: 480px) {
  .u-hidden\@xs {
    display: none; } }
@media (min-width: 768px) {
  .u-hidden\@sm {
    display: none; } }
@media (min-width: 1024px) {
  .u-hidden\@md {
    display: none; } }
@media (min-width: 1200px) {
  .u-hidden\@lg {
    display: none; } }
@media (min-width: 1500px) {
  .u-hidden\@xl {
    display: none; } }

/**
 * Screen Readers only
 */
.u-sr-only {
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  padding: 0;
  border: 0;
  position: absolute; }

/*------------------------------------*\
    #COLOR UTILITES
\*------------------------------------*/
/**
 * Color utilities to force a specific color.
 */
.u-color-link {
  color: #337ab7; }

.u-color-grey {
  color: #7f7f7f; }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbC9fcWEtZGVidWcuc2NzcyIsImdsb2JhbC9fZy1ib3JkZXItYm94LnNjc3MiLCJnbG9iYWwvX2UtcGFnZS5zY3NzIiwiZ2xvYmFsL19zLXZhcmlhYmxlcy5zY3NzIiwiZ2xvYmFsL190LW14LWhlYWRpbmdzLnNjc3MiLCJnbG9iYWwvX2UtdHlwZS5zY3NzIiwiZ2xvYmFsL190LW14LWZvbnQtc2l6ZS5zY3NzIiwiZ2xvYmFsL190LW14LW1lZGlhLXF1ZXJpZXMuc2NzcyIsImdsb2JhbC9fdS1jb2xvcnMuc2NzcyIsImdsb2JhbC9fdC1teC1saW5rLXN0YXRlcy5zY3NzIiwiZ2xvYmFsL19lLWltYWdlcy5zY3NzIiwiZ2xvYmFsL19lLWZvcm1zLnNjc3MiLCJnbG9iYWwvX28td3JhcC5zY3NzIiwiZ2xvYmFsL19vLWNvbnRhaW5lci5zY3NzIiwiZ2xvYmFsL19vLWxpc3QtdW5zdHlsZWQuc2NzcyIsImdsb2JhbC9fdC1teC1saXN0LXVuc3R5bGVkLnNjc3MiLCJnbG9iYWwvX28tbGlzdC1pbmxpbmUuc2NzcyIsImdsb2JhbC9fby1pc2xhbmQuc2NzcyIsImdsb2JhbC9fby1ncmlkLnNjc3MiLCJnbG9iYWwvX3QtbXgtY2xlYXJmaXguc2NzcyIsImdsb2JhbC9fby1tZWRpYS5zY3NzIiwiZ2xvYmFsL19jLWxvZ29zLnNjc3MiLCJnbG9iYWwvX3QtbXgtaGlkZS10ZXh0LnNjc3MiLCJnbG9iYWwvX2MtZm9ybS1ncm91cC5zY3NzIiwiZ2xvYmFsL19jLWJ1dHRvbnMuc2NzcyIsImdsb2JhbC9fYy1uYXYuc2NzcyIsImdsb2JhbC9fYy1oZWFkZXIuc2NzcyIsImdsb2JhbC9fYy1mb290ZXIuc2NzcyIsImdsb2JhbC9fdS10ZXh0LnNjc3MiLCJnbG9iYWwvX3UtaW1hZ2VzLnNjc3MiLCJnbG9iYWwvX3UtdmlzaWJpbGl0eS5zY3NzIiwiZ2xvYmFsL190LW14LXNyLW9ubHkuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQnFDLEFBQVc7RUFD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WjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTs7QVhzR3BCO0VXdEdZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFROztBWHNHcEI7RVd0R1ksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7O0FYc0dwQjtFV3RHWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTs7QVhzR3BCO0VXdEdZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFROztBWHNHcEI7RVd0R1ksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7O0FYc0dwQjtFV3RHWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTtBWHNEWjtFQTBEUjtJV2hIWSxBQUFRO0FYc0RaO0VBMERSO0lXaEhZLEFBQVE7QVhzRFo7RUEwRFI7SVdoSFksQUFBUTs7QVhzR3BCO0VXdEdZLEFBQVE7QVhzRFo7RUEwRFI7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WSxBQUFXOztBc0JldkI7RXRCZlksQUFBVzs7Ozs7QXNCMEJ2QjtFQUNJLEFBQVk7Ozs7Ozs7O0FDaENoQjtFQUNJLEFBQWE7RUFDYixBQUFZOzs7OztBQVVoQjtFQUNJLEFBQVM7RUFDVCxBQUFROzs7Ozs7OztBdEI4TFo7RXVCek1RLEFBQVM7QXZCeUpUO0VBMERSO0l1Qm5OUSxBQUFTO0F2QnlKVDtFQTBEUjtJdUJuTlEsQUFBUztBdkJ5SlQ7RUEwRFI7SXVCbk5RLEFBQVM7QXZCeUpUO0VBMERSO0l1Qm5OUSxBQUFTO0F2QnlKVDtFQTBEUjtJdUJuTlEsQUFBUzs7Ozs7QUFZakI7RUNsQkksQUFBVTtFQUNWLEFBQU07RUFDTixBQUFRO0VBQ1IsQUFBTztFQUNQLEFBQVM7RUFDVCxBQUFRO0VBQ1IsQUFBVTs7Ozs7Ozs7QXZCT2Q7RUFDUSxBQUFPOztBQURmO0VBQ1EsQUFBTyIsImZpbGUiOiJnbG9iYWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vXG4vLy8gREVCVUdcbi8vL1xuQGlmICh0cnVlKSB7XG5cbiAgICAvLyBMaXN0IG9mIHNlbGVjdG9ycyB0aGF0IHdl4oCZcmUgZGVwcmVjYXRpbmcgKGFuZCB0aGVpciByZXBsYWNlbWVudHMsIGlmIGFueSkuXG4gICAgLy8gRXhhbXBsZSAkZGVwcmVjYXRlZC1zZWxlY3RvcnM6IChcbiAgICAvLyAgICAgJy5mb28nOiBudWxsLFxuICAgIC8vICAgICAnLmVycm9yJzogJy5oYXMtZXJyb3InXG4gICAgLy8gKTtcblxuICAgICRkZXByZWNhdGVkLXNlbGVjdG9yczogKFxuICAgICAgICAnLm8tbGF5b3V0JzogJy5vLWdyaWQnLFxuICAgICAgICAnLm8tbGF5b3V0X19pdGVtJzogJy5vLWdyaWRfX2NvbHVtbidcbiAgICApO1xuXG4gICAgLy8gQ3JlYXRlIGEgcGxhY2Vob2xkZXIgdG8gRFJZIG91dCBhbnkgb2Ygb3VyIHNoYXJlZCBzdHlsZXMuXG4gICAgJWRlcHJlY2F0ZWQtc2VsZWN0b3JzLXNoYXJlZC1zdHlsZXMge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG91dGxpbmU6IDFweCBzb2xpZCAjZjAwO1xuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjAwO1xuICAgICAgICAgICAgb3V0bGluZTogMXB4IHNvbGlkICNmMDA7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDEwMCU7XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIEBlYWNoICRzZWxlY3RvciwgJHJlcGxhY2VtZW50IGluICRkZXByZWNhdGVkLXNlbGVjdG9ycyB7XG5cbiAgICAgICAgI3skc2VsZWN0b3J9IHtcblxuICAgICAgICAgICAgLy8gU2hhcmUgdGhlIGNvc21ldGljIHN0eWxlcyByYXRoZXIgdGhhbiByZXBlYXQgdGhlbSBwZXIgc2VsZWN0b3IuXG4gICAgICAgICAgICBAZXh0ZW5kICVkZXByZWNhdGVkLXNlbGVjdG9ycy1zaGFyZWQtc3R5bGVzO1xuXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBAaWYgKCRyZXBsYWNlbWVudCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICAgKiBJZiB3ZSBoYXZlIGEgcmVwbGFjZW1lbnQgc2VsZWN0b3IsIHRlbGwgcGVvcGxlIHdoYXQgaXQgaXMuXG4gICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnV2FybmluZzogU2VsZWN0b3IgYCN7JHNlbGVjdG9yfWAgaXMgZGVwcmVjYXRlZCwgdXNlIGAjeyRyZXBsYWNlbWVudH1gIGluc3RlYWQuJztcbiAgICAgICAgICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAqIElmIHdlIGhhdmUgbm8gcmVwbGFjZW1lbnQsIGp1c3QgdGVsbCBwZW9wbGUgdG8gc3RvcCB1c2luZyB0aGVcbiAgICAgICAgICAgICAgICAgICAgICogc2VsZWN0b3IuXG4gICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnV2FybmluZzogU2VsZWN0b3IgYCN7JHNlbGVjdG9yfWAgaXMgZGVwcmVjYXRlZC4nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG5cblxuXG5cbiAgICAvKipcbiAgICAgKiBJZiBhbiBlbGVtZW50IGhhcyBhIGNsYXNzIGF0dHJpYnV0ZSBjb250YWluaW5nIHR3byBoeXBoZW5zIGJ1dCBubyBzcGFjZVxuICAgICAqIChpLmUuIG9ubHkgb25lIGNsYXNzIGlzIGJlaW5nIHVzZWQsIGFuZCBpdOKAmXMgYSBNb2RpZmllciksIHByb3ZpZGUgdmlzdWFsXG4gICAgICogZmVlZGJhY2sgaW4gdGhlIERPTS5cbiAgICAgKlxuICAgICAqIE4uQi4gVGhpcyBpc27igJl0IGJ1bGxldHByb29mOiBgY2xhc3M9XCJmb28tLWJhciBiYXpcImAgd291bGQgcGFzcywgYXMgd291bGRcbiAgICAgKiBgY2xhc3M9XCIgZm9vLS1iYXJcImAuIFVzZSB3aXRoIGEgcGluY2ggb2Ygc2FsdC5cbiAgICAgKi9cbiAgICBbY2xhc3MqPVwiLS1cIl06bm90KFtjbGFzcyo9XCIgXCJdKSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgb3V0bGluZTogMXB4IHNvbGlkICNmMDA7XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiAnRXJyb3I6IENhbm5vdCBoYXZlIGEgTW9kaWZpZXIgKGkuZS4gYC4nIGF0dHIoY2xhc3MpICdgKSB3aXRob3V0IGEgQmxvY2suJztcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgICAgICBjb2xvcjogI2YwMDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYm90dG9tOiAxMDAlO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgfVxuXG4gICAgfVxuXG5cbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0JPUkRFUiBCT1hcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogQXBwbHkgZ2xvYmFsIGJvcmRlciBib3guXG4gKi9cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5cbmh0bWwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNQQUdFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIEJvZHlcbiAqL1xuYm9keSB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBjb2xvcjogJGJhc2UtY29sb3I7XG4gICAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICAgIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuICAgIGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodDtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuIiwiLy8vL1xuLy8vIFZBUklBQkxFU1xuLy8vL1xuXG5cbi8vL1xuLy8gQmFzZSBnbG9iYWwgZGVmYXVsdHNcbi8vL1xuJGJhc2UtY29sb3I6ICAgICAgICAjMDAwO1xuJGJhc2UtZm9udC1mYW1pbHk6ICBzYW5zLXNlcmlmO1xuJGJhc2UtZm9udC1zaXplOiAgICAxNHB4O1xuJGJhc2UtbGluZS1oZWlnaHQ6ICAxLjU7XG5cblxuXG5cblxuLy8vIEdlbmVyaWMgc3BhY2luZyB1bml0XG4kc3BhY2luZy11bml0OiAgICAgIDIwcHg7XG5cblxuXG5cblxuLy8vXG4vLyBGb250IHNpemVzXG4vLy9cbiRmb250LXNpemUtY29uZmlnOiAoXG4gICAgJ2gxJzogKFxuICAgICAgICAnaW5pdGlhbCc6IDIycHgsXG4gICAgICAgICdzbSc6ICAgICAgMzZweFxuICAgICksXG4gICAgJ2gyJzogKFxuICAgICAgICAnaW5pdGlhbCc6IDIwcHgsXG4gICAgICAgICdzbSc6ICAgICAgMzBweFxuICAgICksXG4gICAgJ2gzJzogKFxuICAgICAgICAnaW5pdGlhbCc6IDE4cHgsXG4gICAgICAgICdzbSc6ICAgICAgMjRweFxuICAgICksXG4gICAgJ2g0JzogKFxuICAgICAgICAnaW5pdGlhbCc6IDE2cHgsXG4gICAgICAgICdzbSc6ICAgICAgMThweFxuICAgICksXG4gICAgJ2g1JzogMTRweCxcbiAgICAnaDYnOiAxMnB4XG4pO1xuXG5cblxuXG5cbi8vL1xuLy8gQ29sb3JzXG4vLy9cbiRjb2xvci1jb25maWc6IChcbiAgICAnYm9keSc6ICAgICAgICAgIzMzMyxcbiAgICAnaGVhZGluZ3MnOiAgICAgIzAwNTg3ZCxcbiAgICAncHJpbWFyeSc6ICAgICAgIzMzN2FiNyxcbiAgICAnbGluayc6ICAgICAgICAgIzMzN2FiNyxcbiAgICAnZ3JleSc6IChcbiAgICAgICAgJ2RlZmF1bHQnOiAgIzdmN2Y3ZixcbiAgICAgICAgJzI1JzogICAgICAgI2JmYmZiZixcbiAgICAgICAgJzc1JzogICAgICAgIzQ3NDc0N1xuICAgIClcbik7XG5cblxuXG5cblxuLy8vXG4vLyBUaW1lciBNYXAgZm9yIEBmdW5jdGlvbiB0aW1lcigpO1xuLy8vXG4kdGltZXItY29uZmlnOiAoXG4gICAgJ25vcm1hbCc6ICAgMC40cyxcbiAgICAnc2xvdyc6ICAgIDAuNzVzLFxuICAgICdmYXN0JzogICAgMC4xNXNcbik7XG5cblxuXG5cblxuLy8vXG4vLyBaLWluZGV4IE1hcCBmb3IgQGZ1bmN0aW9uIHooKTtcbi8vL1xuJHotaW5kZXgtY29uZmlnOiAoXG4gICAgJ2V4YW1wbGUnOiAgIDEwMDBcbik7XG5cblxuXG5cblxuLy8vXG4vLyBCcmVha3BvaW50c1xuLy8vXG4kYnJlYWtwb2ludHM6IChcbiAgICAneHMnOiAgICAgIDQ4MHB4LFxuICAgICdzbSc6ICAgICAgNzY4cHgsXG4gICAgJ21kJzogICAgIDEwMjRweCxcbiAgICAnbGcnOiAgICAgMTIwMHB4LFxuICAgICd4bCc6ICAgICAxNTAwcHgsXG5cbiAgICAnc2hvcnQnOiAgIDQ4MHB4IHZlcnRpY2FsLFxuICAgICdtZWRpdW0nOiAgNzY4cHggdmVydGljYWwsXG4gICAgJ3RhbGwnOiAgIDEwMjRweCB2ZXJ0aWNhbFxuKTtcbiIsIi8vL1xuLy8vIEdlbmVyYXRlIGEgbGlzdCBvZiBoZWFkaW5nIHRhZ3MgYW5kIGNsYXNzZXMuXG4vLy9cbi8vLyBAcGFyYW0ge251bWJlcn0gJGZyb20gWzFdIC0gSGlnaGVzdCBoZWFkaW5nIHZhbHVlIHRvIHN0YXJ0IGZyb20uXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICR0byBbNl0gLSBMb3dlc3QgaGVhZGluZyB2YWx1ZSB0byBzdGFydCBmcm9tLlxuLy8vXG4vLy8gQHRocm93IEVycm9yIHJlbGF0ZWQgbWVzc2FnZVxuLy8vXG4vLy8gQGlnbm9yZVxuLy8vIFsxXSBDcmVhdGUgYSBwbGFjZWhvbGRlciB0aGF0IHdlIHdpbGwgZXh0ZW5kIHRvLlxuLy8vIFsyXSBDaGVjayB0aGF0IG9ubHkgMS02IGlzIGJlaW5nIHJlcXVlc3RlZCBhbmQgJGZyb20gaXMgc21hbGxlciB0aGFuICR0by5cbi8vLyBbM10gTG9vcCB0aHJvdWdoIHRoZSByYW5nZSBvZiAkZnJvbSBhbmQgJHRvIHRvIGdlbmVyYXRlIGFuZCBAZXh0ZW5kIHRoZVxuLy8vICAgICB0aGUgY29ycmVjdCBjbGFzc2VzIHRvIHRoZSBwbGFjZWhvbGRlci5cbi8vLyBbNF0gJGhlYWRpbmdzLWNvdW50ZXIgcHJldmVudHMgbXVsdGlwbGUgaGVhZGluZ3MoKSBjYWxscyBmcm9tIGNvbWJpbmluZyBvbiBhbGxcbi8vLyAgICAgcHJldmlvdXMgJWhlYWRpbmctcGxhY2Vob2xkZXIgYnkgbWFraW5nIGl0IHVuaXF1ZSBmb3IgZWFjaCBjYWxsXG4vLy9cblxuJGhlYWRpbmdzLWNvdW50ZXI6IDA7IC8vIFs0XVxuXG5AbWl4aW4gaGVhZGluZ3MoJGZyb206IDEsICR0bzogNikge1xuXG4gICAgLy8gWzEgJiA0XVxuICAgICVoZWFkaW5nLXBsYWNlaG9sZGVyLSN7JGhlYWRpbmdzLWNvdW50ZXJ9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuXG4gICAgLy8gWzJdXG4gICAgQGlmICRmcm9tID49IDEgYW5kICR0byA8PSA2IGFuZCAkZnJvbSA8PSAkdG8ge1xuXG4gICAgICAgIC8vIFszXVxuICAgICAgICBAZm9yICRoZWFkaW5nIGZyb20gJGZyb20gdGhyb3VnaCAkdG8ge1xuXG4gICAgICAgICAgICBoI3skaGVhZGluZ30ge1xuICAgICAgICAgICAgICAgIEBleHRlbmQgJWhlYWRpbmctcGxhY2Vob2xkZXItI3skaGVhZGluZ3MtY291bnRlcn07IC8vIFs0XVxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH0gQGVsc2Uge1xuICAgICAgICBAd2FybiAnYGhlYWRpbmdzKClgIG9ubHkgYWNjZXB0cyB0d28gbnVtYmVycyBiZXR3ZWVuIDEgJiA2Lic7XG4gICAgICAgIEByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICAkaGVhZGluZ3MtY291bnRlcjogJGhlYWRpbmdzLWNvdW50ZXIgKyAxOyAvLyBbNF1cblxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjVFlQT0dSQVBZXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIEhlYWRpbmdzXG4gKlxuICogSW4gbW9zdCBjYXNlcyB5b3Ugc2hvdWxkIGF2b2lkIHN0eWxpbmcgYSBzcGVjaWZpYyBoZWFkaW5nIHR5cGUgdG8gaGF2ZVxuICogY3VzdG9tIGRpc3RpbmN0IHN0eWxlcyB0aGF0IHdvdWxkIGFwcGx5IHRvIGFsbCBoZWFkaW5ncyBvZiB0aGF0IHR5cGUuXG4gKiBJbnN0ZWFkIGNyZWF0ZSBhIG5ldyBjb21wb25lbnQgbGlrZSBjLWhlYWRpbmcgb3IgYy10aXRsZS4gVGhpcyBtYXkgbm90XG4gKiBiZSB0aGUgY2FzZSB3aGVuIGEgQ01TIG5lZWRzIGRlZmF1bHQgaGVhZGluZ3MgdG8gYXBwZWFyIGEgc3BlY2lmaWMgd2F5LlxuICovXG5AaW5jbHVkZSBoZWFkaW5ncygpIHtcbiAgICBtYXJnaW46IDAgMCBzcGFjZXIoMSk7XG4gICAgbGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0O1xufVxuXG5cbmgxIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2gxJyk7XG59XG5cbmgyIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2gyJyk7XG59XG5cbmgzIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2gzJyk7XG59XG5cbmg0IHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2g0Jyk7XG59XG5cbmg1IHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2g1Jyk7XG59XG5cbmg2IHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2g2Jyk7XG59XG5cblxuXG5cblxuLyoqXG4gKiBQYXJhZ3JhcGhzXG4gKi9cbnAge1xuICAgIG1hcmdpbjogMCAwIHNwYWNlcigxKTtcbn1cblxuXG5cblxuXG4vKipcbiAqIExpc3RzXG4gKi9cbnVsLFxub2wsXG5kbCB7XG4gICAgbWFyZ2luOiAwIDAgc3BhY2VyKDEpO1xufVxuXG5cblxuXG5cbi8qKlxuICogTGluayBTdHlsZXNcbiAqL1xuYSB7XG4gICAgY29sb3I6IGNvbG9yKCdsaW5rJyk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgQGluY2x1ZGUgbGluay1zdGF0ZXMoKSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cblxufVxuXG5cblxuXG5cbi8qKlxuICogSG9yaXpvbnRhbCBSdWxlXG4gKi9cbmhyIHtcbiAgICBtYXJnaW46IDAgMCBzcGFjZXIoMSk7XG4gICAgYm9yZGVyOiBzb2xpZCBjb2xvcignZ3JleScsICcyNScpO1xuICAgIGJvcmRlci13aWR0aDogMCAwIDFweDtcbn1cbiIsIi8vL1xuLy8gRm9udCBTaXplc1xuLy8gQHBhcmFtICB7c3RyaW5nfSAkc2l6ZSBOYW1lIG9mIGEgZm9udCBzaXplIHNldCBpbiAkZm9udC1zaXplLWNvbmZpZy5cbi8vL1xuQG1peGluIGZvbnQtc2l6ZSgkc2l6ZSkge1xuXG4gICAgQGlmIG1hcC1oYXMta2V5KCRmb250LXNpemUtY29uZmlnLCAkc2l6ZSkge1xuXG4gICAgICAgICRmb250LXNpemU6IG1hcC1nZXQoJGZvbnQtc2l6ZS1jb25maWcsICRzaXplKTtcblxuICAgICAgICBAaWYgdHlwZS1vZigkZm9udC1zaXplKSA9PSAnbnVtYmVyJyB7XG5cbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZW0obWFwLWdldCgkZm9udC1zaXplLWNvbmZpZywgJHNpemUpKTtcblxuICAgICAgICB9IEBlbHNlaWYgdHlwZS1vZigkZm9udC1zaXplKSA9PSAnbWFwJyB7XG5cbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZW0obWFwLWdldCgkZm9udC1zaXplLCAnaW5pdGlhbCcpKTtcblxuICAgICAgICAgICAgQGVhY2ggJGtleSwgJHZhbHVlIGluICRmb250LXNpemUge1xuXG4gICAgICAgICAgICAgICAgQGlmICRrZXkgIT0gJ2luaXRpYWwnIHtcblxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZWRpYSgjeyRrZXl9KSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogZW0oJHZhbHVlKTtcblxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9IEBlbHNlIHtcblxuICAgICAgICAgICAgQHdhcm4gXCJgI3skc2l6ZX1gIG11c3QgYmUgYSBzdHJpbmcgb3IgbWFwXCI7XG4gICAgICAgICAgICBAcmV0dXJuIG51bGw7XG5cbiAgICAgICAgfVxuXG4gICAgfSBAZWxzZSB7XG5cbiAgICAgICAgQHdhcm4gXCJgI3skc2l6ZX1gIGRvZXMgbm90IGhhdmUgYSB2YWx1ZSBzZXQgaW4gJGZvbnQtc2l6ZS1jb25maWcuICgje21hcC1rZXlzKCRmb250LXNpemUtY29uZmlnKX0pXCI7XG4gICAgICAgIEByZXR1cm4gbnVsbDtcblxuICAgIH1cblxufVxuIiwiLy8vXG4vLy8gTUVESUEgUVVFUklFU1xuLy8vXG4vLy8gQmVjYXVzZSB0aGUgYnJlYWtwb2ludHMgdGhlIHByb2plY3QgaGFzIGFyZSBzbyBpbXBvcnRhbnQgd2UgbmVlZCB0b1xuLy8vIGdlbmVyYXRlIHR3byBtYXBzIHRoYXQgY29udGFpbiBvdXIgbWVkaWEgcXVlcmllIHN0cmluZ3MuXG4vLy9cbi8vL1xuLy8vIDEpICRicmVha3BvaW50cy1sYXlvdXQtY29uZmlnOiBgbWluLXdpZHRoYCAobW9iaWxlIHVwKSBjb25maWd1cmF0aW9uIG1hcFxuLy8vIGZvciB0aGUgbGF5b3V0cy5cbi8vL1xuLy8vICRicmVha3BvaW50cy1sYXlvdXQtY29uZmlnOiAoXG4vLy8gICAgICd4cyc6ICcobWluLXdpZHRoOiA0ODBweCknLFxuLy8vICAgICAnc20nOiAnKG1pbi13aWR0aDogNzY4cHgpJyxcbi8vLyAgICAgJ21kJzogJyhtaW4td2lkdGg6IDEwMjRweCknLFxuLy8vICAgICAnbGcnOiAnKG1pbi13aWR0aDogMTIwMHB4KScsXG4vLy8gICAgICd4bCc6ICcobWluLXdpZHRoOiAxNTAwcHgpJ1xuLy8vICk7XG4vLy9cbi8vL1xuLy8vIDIpICRicmVha3BvaW50cy1leHRlbmRlZC1jb25maWc6IEV4dGVuZHMgYCRicmVha3BvaW50cy1sYXlvdXQtY29uZmlnYCBieVxuLy8vIGFkZGluZyBgbWF4LXdpZHRoYCAoZGVza3RvcCBkb3duKSwgdmlld3BvcnQgc3BlY2lmaWMgYG9ubHlgLCBhbmQgdmVydGljYWxcbi8vLyBtZWRpYSBxdWVyaWVzLlxuLy8vXG4vLy8gJGJyZWFrcG9pbnRzLWV4dGVuZGVkLWNvbmZpZzogKFxuLy8vICAgICAnc2NyZWVuJzogJ3NjcmVlbicsXG4vLy8gICAgICdwcmludCc6ICdwcmludCcsXG4vLy8gICAgICdoaWdoLXJlcyc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJyxcbi8vL1xuLy8vICAgICAneHMnOiAnKG1pbi13aWR0aDogNDgwcHgpJyxcbi8vLyAgICAgJ2xlc3MtdGhhbi14cyc6ICcobWF4LXdpZHRoOiA0NzlweCknLFxuLy8vICAgICAneHMtb25seSc6ICdzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpJyxcbi8vL1xuLy8vICAgICAnc20nOiAnKG1pbi13aWR0aDogNzY4cHgpJyxcbi8vLyAgICAgJ2xlc3MtdGhhbi1zbSc6ICcobWF4LXdpZHRoOiA3NjdweCknLFxuLy8vICAgICAnc20tb25seSc6ICdzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyM3B4KScsXG4vLy9cbi8vLyAgICAgJ21kJzogJyhtaW4td2lkdGg6IDEwMjRweCknLFxuLy8vICAgICAnbGVzcy10aGFuLW1kJzogJyhtYXgtd2lkdGg6IDEwMjNweCknLFxuLy8vICAgICAnbWQtb25seSc6ICdzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDExOTlweCknLFxuLy8vXG4vLy8gICAgICdsZyc6ICcobWluLXdpZHRoOiAxMjAwcHgpJyxcbi8vLyAgICAgJ2xlc3MtdGhhbi1sZyc6ICcobWF4LXdpZHRoOiAxMTk5cHgpJyxcbi8vLyAgICAgJ2xnLW9ubHknOiAnc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIGFuZCAobWF4LXdpZHRoOiAxNDk5cHgpJyxcbi8vL1xuLy8vICAgICAneGwnOiAnKG1pbi13aWR0aDogMTUwMHB4KScsXG4vLy8gICAgICdsZXNzLXRoYW4teGwnOiAnKG1heC13aWR0aDogMTQ5OXB4KScsXG4vLy9cbi8vLyAgICAgJ3Nob3J0JzogJyhtaW4taGVpZ2h0OiA0ODBweCknLFxuLy8vICAgICAnbGVzcy10aGFuLXNob3J0JzogJyhtYXgtaGVpZ2h0OiA0NzlweCknLFxuLy8vICAgICAnc2hvcnQtb25seSc6ICdzY3JlZW4gYW5kIChtaW4taGVpZ2h0OiA0ODBweCkgYW5kIChtYXgtaGVpZ2h0OiA3NjdweCknLFxuLy8vXG4vLy8gICAgICdtZWRpdW0nOiAnKG1pbi1oZWlnaHQ6IDc2OHB4KScsXG4vLy8gICAgICdsZXNzLXRoYW4tbWVkaXVtJzogJyhtYXgtaGVpZ2h0OiA3NjdweCknLFxuLy8vICAgICAnbWVkaXVtLW9ubHknOiAnc2NyZWVuIGFuZCAobWluLWhlaWdodDogNzY4cHgpIGFuZCAobWF4LWhlaWdodDogMTAyM3B4KScsXG4vLy9cbi8vLyAgICAgJ3RhbGwnOiAnKG1pbi1oZWlnaHQ6IDEwMjRweCknLFxuLy8vICAgICAnbGVzcy10aGFuLXRhbGwnOiAnKG1heC1oZWlnaHQ6IDEwMjNweCknXG4vLy8gKTtcbi8vL1xuXG5cblxuXG5cbi8vIENvbnRhaW5lciBmb3IgZ2VuZXJhdGVkIG1lZGlhIHF1ZXJpZXMgYmFzZWQgb2YgdGhvc2UgbGlzdGVkIGluICRicmVha3BvaW50c1xuJGJyZWFrcG9pbnRzLWxheW91dC1jb25maWc6ICgpO1xuXG4vLyBFeHRlbmRlZCBicmVha3BvaW50cyBmb3IgZ2VuZXJhdGluZyB1dGlsaXR5IGNsYXNzZXMuIEluY2x1ZGVzIHNvbWUgZGVmYXVsdHMuXG4kYnJlYWtwb2ludHMtZXh0ZW5kZWQtY29uZmlnOiAoXG4gICAgJ3NjcmVlbic6ICAgJ3NjcmVlbicsXG4gICAgJ3ByaW50JzogICAgJ3ByaW50JyxcbiAgICAnaGlnaC1yZXMnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbik7XG5cblxuXG5cblxuLy8gR2V0IHRoZSBrZXlzIGZvciB0aGUgYnJlYWtwb2ludHMuXG4kYnJlYWtwb2ludC1rZXlzOiBtYXAta2V5cygkYnJlYWtwb2ludHMpO1xuXG4vLyBHZXQgYSBsaXN0IG9mIHRoZSBicmVha3BvaW50cyBwcm9wZXJ0aWVzLlxuJGJyZWFrcG9pbnQtcHJvcHM6IG1hcC12YWx1ZXMoJGJyZWFrcG9pbnRzKTtcblxuQGVhY2ggJGJyZWFrcG9pbnQgaW4gJGJyZWFrcG9pbnQta2V5cyB7XG5cbiAgICAvLyBJbmRleCBvZiBwb3NpdGlvbiBpbiBsaXN0XG4gICAgJGluZGV4OiBpbmRleCgkYnJlYWtwb2ludC1rZXlzLCAkYnJlYWtwb2ludCk7XG5cbiAgICAvLyBQcm9wZXJ0aWVzIG9mIHRoZSBjdXJyZW50IGJyZWFrcG9pbnRcbiAgICAkcHJvcHM6IG50aCgkYnJlYWtwb2ludC1wcm9wcywgJGluZGV4KTtcblxuICAgIC8vIFRoZSBzaXplIHNob3VsZCBiZSB0aGUgZmlyc3Qgb25lLlxuICAgICRzaXplOiBudGgoJHByb3BzLCAxKTtcblxuICAgIC8vIEFzc3VtZSBhIHdpZHRoXG4gICAgJGRpcmVjdGlvbjogJ3dpZHRoJztcblxuICAgIC8vIExvb3AgdGhyb3VnaCBhbmQgY2hlY2sgaWQgdGhlIGJyZWFrcG9pbnQgaGFzIGEgdmVydGljYWwgcHJvcGVydHkuXG4gICAgQGVhY2ggJGl0ZW0gaW4gJHByb3BzIHtcbiAgICAgICAgQGlmKCRpdGVtID09IHZlcnRpY2FsKSB7XG5cbiAgICAgICAgICAgIC8vIElmIHNvIGNoYW5nZSB0byBoZWlnaHRcbiAgICAgICAgICAgICRkaXJlY3Rpb246ICdoZWlnaHQnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIHRoaXMgYnJlYWtwb2ludCB0byB0aGUgbGF5b3V0IGJyZWFrcG9pbnRzXG4gICAgQGlmICRkaXJlY3Rpb24gPT0gJ3dpZHRoJyB7XG4gICAgICAgICRicmVha3BvaW50cy1sYXlvdXQtY29uZmlnOiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnRzLWxheW91dC1jb25maWcsICgnI3skYnJlYWtwb2ludH0nOiAnKG1pbi0jeyRkaXJlY3Rpb259OiAjeyRzaXplfSknKSk7XG4gICAgfVxuXG4gICAgLy8gR2VuZXJhdGUgRXh0ZW5kZWQgc2l6ZXNcbiAgICAkYnJlYWtwb2ludC1taW46ICgnI3skYnJlYWtwb2ludH0nOiAnKG1pbi0jeyRkaXJlY3Rpb259OiAjeyRzaXplfSknKTtcbiAgICAkYnJlYWtwb2ludC1sZXNzLXRoYW46ICgnbGVzcy10aGFuLSN7JGJyZWFrcG9pbnR9JzogJyhtYXgtI3skZGlyZWN0aW9ufTogI3skc2l6ZSAtIDF9KScpO1xuXG4gICAgLy8gQWRkIHRoZSBnZW5lcmF0ZWQgc2l6ZXMgdG8gdGhlIGV4dGVuZGVkIGNvbmZpZyBtYXAuXG4gICAgJGJyZWFrcG9pbnRzLWV4dGVuZGVkLWNvbmZpZzogbWFwLW1lcmdlKCRicmVha3BvaW50cy1leHRlbmRlZC1jb25maWcsICRicmVha3BvaW50LW1pbik7XG4gICAgJGJyZWFrcG9pbnRzLWV4dGVuZGVkLWNvbmZpZzogbWFwLW1lcmdlKCRicmVha3BvaW50cy1leHRlbmRlZC1jb25maWcsICRicmVha3BvaW50LWxlc3MtdGhhbik7XG5cbiAgICBAaWYgJGluZGV4IDwgbGVuZ3RoKCRicmVha3BvaW50LWtleXMpIHtcblxuICAgICAgICAkbmV4dC1wcm9wczogbnRoKCRicmVha3BvaW50LXByb3BzLCAkaW5kZXggKyAxKTtcbiAgICAgICAgJG5leHQtc2l6ZTogbnRoKCRuZXh0LXByb3BzLCAxKTtcblxuICAgICAgICAkbmV4dC1kaXJlY3Rpb246ICd3aWR0aCc7XG5cbiAgICAgICAgQGVhY2ggJGl0ZW0gaW4gJG5leHQtcHJvcHMge1xuICAgICAgICAgICAgQGlmKCRpdGVtID09IHZlcnRpY2FsKSB7XG4gICAgICAgICAgICAgICAgJG5leHQtZGlyZWN0aW9uOiAnaGVpZ2h0JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIHRvIG1ha2Ugc3VyZSB0aGlzIGRpcmVjdGlvbiBtYXRjaGVzIHRoZSBuZXh0IGl0ZW0ncyBkaXJlY3Rpb24uXG4gICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gbWl4IHZlcnRpY2FsIGFuZCBob3Jpem9udGFsXG4gICAgICAgIEBpZiAkZGlyZWN0aW9uID09ICRuZXh0LWRpcmVjdGlvbiB7XG5cbiAgICAgICAgICAgICRicmVha3BvaW50LW9ubHk6IChcbiAgICAgICAgICAgICAgICAnI3skYnJlYWtwb2ludH0tb25seSc6ICdzY3JlZW4gYW5kIChtaW4tI3skZGlyZWN0aW9ufTogI3skc2l6ZX0pIGFuZCAobWF4LSN7JGRpcmVjdGlvbn06ICN7JG5leHQtc2l6ZSAtIDF9KSdcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICRicmVha3BvaW50cy1leHRlbmRlZC1jb25maWc6IG1hcC1tZXJnZSgkYnJlYWtwb2ludHMtZXh0ZW5kZWQtY29uZmlnLCAkYnJlYWtwb2ludC1vbmx5KTtcblxuICAgICAgICB9XG5cbiAgICB9XG5cbn1cblxuXG5cblxuXG4vLy9cbi8vLyBNZWRpYSBRdWVyaWVzXG4vLy9cbi8vLyBAcGFyYW0ge3N0cmluZ30gJG5hbWUgLSAka2V5IHRvIHVzZSBmcm9tICRicmVha3BvaW50cy1leHRlbmRlZC1jb25maWdcbi8vL1xuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJGJyZWFrcG9pbnRzLWV4dGVuZGVkLWNvbmZpZ1xuLy8vXG5AbWl4aW4gbWVkaWEoJG5hbWUpIHtcblxuICAgIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMtZXh0ZW5kZWQtY29uZmlnLCAkbmFtZSkge1xuICAgICAgICBAbWVkaWEgI3ttYXAtZ2V0KCRicmVha3BvaW50cy1leHRlbmRlZC1jb25maWcsICRuYW1lKX0ge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIHtcbiAgICAgICAgQHdhcm4gJ0NvdWxkblxcJ3QgZmluZCBhIGJyZWFrcG9pbnQgbmFtZWQgYCN7JG5hbWV9YC4nO1xuICAgIH1cblxufVxuXG5cblxuXG5cbi8vL1xuLy8gQWxpYXMgdGhlIG1lZGlhIG1peGluLlxuLy8vXG5AbWl4aW4gYnJlYWtwb2ludCgkYXJncy4uLikge1xuXG4gICAgQHdhcm4gJ2BAaW5jbHVkZSBicmVha3BvaW50KClgIGFuZCBgQGluY2x1ZGUgYnAoKWAgaXMgZGVwcmljYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkLiBQbGVhc2UgdXNlIEBtZWRpYSc7XG5cbiAgICBAaW5jbHVkZSBtZWRpYSgkYXJncy4uLikge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG5cbn1cblxuXG5AbWl4aW4gYnAoJGFyZ3MuLi4pIHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRhcmdzLi4uKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuXG5cblxuXG4vLy9cbi8vLyBMb29wIHRocm91Z2ggdGhlIGJyZWFrcG9pbnRzIChsYXlvdXQvZXh0ZW5kZWQpLCBvdXRwdXQgdGhlIHBhcmVudCBzY29wZSBhbmRcbi8vLyBuZXN0IHRoZSBjb250ZW50IGluIGVhY2ggbWVkaWEgcXVlcnkuIFRoZSBtaXhpbiBtdXN0IGJlIG5lc3RlZCBpbiB0aGUgY2xhc3Ncbi8vLyB5b3Ugd2lzaCB0byBnZW5lcmF0ZSBhbGwgdGhlIGJyZWFrcG9pbnQgbW9kaWZpZXJzIGZvci5cbi8vL1xuLy8vIEBwYXJhbSB7Ym9vbGVhbn0gJGV4dGVuZGVkIC0gU2hvdWxkIHRoZSBtaXhpbiB1c2UgdGhlXG4vLy8gJGJyZWFrcG9pbnRzLWV4dGVuZGVkLWNvbmZpZ1xuLy8vXG5AbWl4aW4gbG9vcC1icmVha3BvaW50cygkZXh0ZW5kZWQ6IGZhbHNlKSB7XG5cbiAgICAvLyBPdXRwdXQgYSBub24tbmFtZXNwYWNlZCB2ZXJzaW9uLiBTbyB3ZSBkb24ndCBoYXZlIHRvIHJlcGVhdCBvdXJzZWx2ZXMuXG4gICAgJiB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cblxuICAgIC8vIENoZWNrIHdoaWNoIGJyZWFrcG9pbnQgY29uZmlnIHdlJ3JlIHVzaW5nLlxuICAgICRsb29wLWJyZWFrcG9pbnRzLWNvbmZpZzogaWYoJGV4dGVuZGVkLCAkYnJlYWtwb2ludHMtZXh0ZW5kZWQtY29uZmlnLCAkYnJlYWtwb2ludHMtbGF5b3V0LWNvbmZpZyk7XG5cbiAgICAvLyBMb29wIHRocm91Z2ggdGhlIGJyZWFrcG9pbnRzLlxuICAgIEBlYWNoICRicmVha3BvaW50LCAkbWVkaWEtcXVlcmllIGluICRsb29wLWJyZWFrcG9pbnRzLWNvbmZpZyB7XG5cbiAgICAgICAgLy8gQXBwZW5kIHRoZSBgQGJyZWFrcG9pbnRgIG5hbWVzcGFjZVxuICAgICAgICAmXFxAI3skYnJlYWtwb2ludH0ge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoJGJyZWFrcG9pbnQpIHtcbiAgICAgICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjQ09MT1IgVVRJTElURVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8vIEdlbmVyYXRlIGNvbG9yIGNsYXNzZXMgZm9yIGVhY2ggY29sb3IgaW4gJGNvbG9yLXV0aWxpdGVzXG4vLyBUaGlkIGltcGxlbWVudGF0aW9uIGRvZXNuJ3Qgc3VwcG9ydCB0aGUgY29sb3IgdmFyaWF0aW9ucy5cbiRjb2xvci11dGlsaXRpZXMtY29uZmlnOiAoXG4gICAgJ2xpbmsnLFxuICAgICdncmV5J1xuKTtcblxuXG4vKipcbiAqIENvbG9yIHV0aWxpdGllcyB0byBmb3JjZSBhIHNwZWNpZmljIGNvbG9yLlxuICovXG5AZWFjaCAkY29sb3IgaW4gJGNvbG9yLXV0aWxpdGllcy1jb25maWcge1xuXG4gICAgLnUtY29sb3ItI3skY29sb3J9IHtcbiAgICAgICAgY29sb3I6IGNvbG9yKCRjb2xvcik7XG4gICAgfVxuXG59XG4iLCIvLy9cbi8vLyBMaW5rIFBzdWVkbyBTdGF0ZXNcbi8vL1xuLy8vIEBwYXJhbSB7Ym9vbGVhbn0gJHBhcmVudCBbdHJ1ZV0gLSBDYW4gaW5jbHVkZSB0aGUgcGFyZW50IHNlbGVjdG9yIHRvbyBpZiBzZXQgdG9cbi8vL1xuQG1peGluIGxpbmstc3RhdGVzKCRwYXJlbnQ6IGZhbHNlKSB7XG5cbiAgICBAaWYgKCRwYXJlbnQpe1xuXG4gICAgICAgICYsXG4gICAgICAgICY6aG92ZXIsXG4gICAgICAgICY6YWN0aXZlLFxuICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG5cbiAgICB9IEBlbHNlIHtcblxuICAgICAgICAmOmhvdmVyLFxuICAgICAgICAmOmFjdGl2ZSxcbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNJTUFHRVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogWzFdIHJlbW92ZSBzcGFjaW5nIGJlbG93IGlubGluZSBpbWFnZXMuXG4gKi9cbmltZyB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLy8gWzFdXG4gICAgbWFyZ2luOiAwIDAgc3BhY2VyKDEpO1xufVxuXG5cblxuXG5cbi8qKlxuICogRmlndXJlXG4gKi9cbmZpZ3VyZSB7XG4gICAgbWFyZ2luOiAwIDAgc3BhY2VyKDEpO1xuXG4gICAgaW1nIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogc3BhY2VyKDAuMjUpO1xuICAgIH1cblxufVxuXG5cblxuXG5cbmZpZ2NhcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogZW0oMTJweCk7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjRk9STVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGNvbG9yKCdncmV5JywgJzI1Jyk7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjV1JBUFxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyoqXG4gKiBBIHNpbXBsZSB3cmFwcGVyIHRoYXQgY3JvcHMgYWxsIGNvbnRlbnQgdGhhdCBibGVlZHMgb3V0IG9mIGl0XG4gKiBVc2VmdWxsIGZvciBwcmV2ZW50aW5nIHNjcm9sbGluZyBvbiB0aGUgYm9keS5cbiAqL1xuLm8td3JhcCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0NPTlRBSU5FUlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy8vIENvbnRhaW5lciBXaWR0aFxuJGNvbnRhaW5lci13aWR0aDogICAgICAgMTI0MHB4O1xuXG4vLy8gQ29udGFpbmVyIGxlZnQgYW5kIHJpZ2h0IHBhZGRpbmdcbiRjb250YWluZXItcGFkZGluZzogICAgICAgMjBweDtcblxuXG5cblxuXG4vKipcbiAqIEFuIG91dGVyIGNvbnRhaW5lciBmb3Igc2l0ZSBjb250ZW50LiBBIGNvbnRhaW5lciBzaG91bGQgbmV2ZXIgYmUgYSBjaGlsZCBvZlxuICogaW5zdGFuY2Ugb2YgaXQncyBzZWxmLlxuICovXG4uby1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgJGNvbnRhaW5lci1wYWRkaW5nO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogJGNvbnRhaW5lci1wYWRkaW5nICsgJGNvbnRhaW5lci13aWR0aCArICRjb250YWluZXItcGFkZGluZztcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0xJU1QgVU5TVFlMRURcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogUmVtb3ZlIGxpc3Qgc3R5bGluZyBmcm9tIGxpc3RcbiAqL1xuLm8tbGlzdC11bnN0eWxlZCB7XG4gICAgQGluY2x1ZGUgbGlzdC11bnN0eWxlZCgpO1xufVxuIiwiLy8vXG4vLy8gVW5zdHlsZWQgTGlzdFxuLy8vXG5AbWl4aW4gbGlzdC11bnN0eWxlZCgpIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogIDA7XG4gICAgcGFkZGluZzogMDtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0xJU1QgSU5MSU5FXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIExpc3Qgd2l0aCBkaXJlY3QgY2hpbGRyZW4gZGlzcGxheWluZyBpbmxpbmUuXG4gKiBbMV0gQWxsIGl0ZW1zIGV4Y2VwdCB0aGUgZmlyc3QgaGF2ZSBwYWRkaW5nLlxuICovXG4uby1saXN0LWlubGluZSB7XG4gICAgQGluY2x1ZGUgbGlzdC11bnN0eWxlZCgpO1xuXG4gICAgJiA+IGxpIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cblxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjSVNMQU5EXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIEFkZCBhIG5pY2UgZ2FwIGJlbG93IGEgYmxvY2sgb2YgY29udGVudC5cbiAqL1xuLm8taXNsYW5kIHtcbiAgICBtYXJnaW4tYm90dG9tOiBzcGFjZXIoMyk7XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNMQVlPVVRcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8vL1xuLy8gR3JpZCBDb25maWd1cmF0aW9uXG4vL1xuLy8gWzFdIE51bWJlciBvZiBjb2x1bW5zIHBlciBncmlkIGxheW91dFxuLy8gWzJdIENvbHVtbiBndXR0ZXJzLCBhbnl0aGluZyBhZGRpdGlvbmFsIGl0ZW1zIG90aGVyIHRoYW4gYGluaXRpYWxgIGJ1aWxkcyBvdXRcbi8vIG1vZGlmaWVyIGNsYXNzZXNcbi8vIFszXSBHZW5lcmF0ZSBvZmZzZXQgbW9kaWZpZXIgY2xhc3NlcyBmb3IgbGF5b3V0IGl0ZW1zIHRoYXQgcHVzaCBjb250ZW50IHRvXG4vLyB0aGUgcmlnaHQgYXMgaWYgdGhlIHNldCBudW1iZXIgb2YgY29sdW1ucyB3YXMgdG8gdGhlIGxlZnQgb2YgaXQuXG4vLyBbNF0gR2VuZXJhdGUgc291cmNlIG9yZGVyaW5nIG1vZGlmaWVyIGNsYXNzZXMgZm9yIGxheW91dCBpdGVtcyBzbyB5b3UgY2FuXG4vLyBzd2FwIHRoZSBzdGFja2luZyBvbiBtb2JpbGUgdmVyc2VzIGRlc2t0b3AuXG4vLy9cblxuJGdyaWQtY29uZmlnOiAoXG4gICAgJ2NvbHVtbnMnOiAgICAgICAxMixcbiAgICAnZ3V0dGVycyc6IChcbiAgICAgICAgJ2luaXRpYWwnOiAgIDMwcHhcbiAgICApLFxuICAgICdvZmZzZXRzJzogICAgICAgZmFsc2UsXG4gICAgJ3B1c2gtYW5kLXB1bGwnOiBmYWxzZVxuKTtcblxuXG4vLyBTdG9yZSAkZ3JpZC1jb25maWcgbWFwIGFzIHZhcmlhYmxlcy4uLlxuJGdyaWQtZ3V0dGVyczogICAgICAgICAgICBtYXAtZ2V0KCRncmlkLWNvbmZpZywgJ2d1dHRlcnMnKTtcbiRncmlkLWd1dHRlcnMtaW5pdGlhbDogICAgbWFwLWdldCgkZ3JpZC1ndXR0ZXJzLCAnaW5pdGlhbCcpO1xuJGdyaWQtY29sdW1uczogICAgICAgICAgICBtYXAtZ2V0KCRncmlkLWNvbmZpZywgJ2NvbHVtbnMnKTtcbiRncmlkLW9mZnNldHM6ICAgICAgICAgICAgbWFwLWdldCgkZ3JpZC1jb25maWcsICdvZmZzZXRzJyk7XG4kZ3JpZC1wdXNoLWFuZC1wdWxsOiAgICAgIG1hcC1nZXQoJGdyaWQtY29uZmlnLCAncHVzaC1hbmQtcHVsbCcpO1xuXG5cblxuXG5cbi8qKlxuICogTGF5b3V0IHJvd1xuICpcbiAqIFsxXSBBZGRpdGlvbmFsIG1vZGlmaWVyIGNsYXNzZXMgZm9yIGxheW91dCBndXR0ZXJzLlxuICovXG4uby1ncmlkIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgICBtYXJnaW4tcmlnaHQ6IG5lZyhoYWx2ZSgkZ3JpZC1ndXR0ZXJzLWluaXRpYWwpKTtcbiAgICBtYXJnaW4tbGVmdDogIG5lZyhoYWx2ZSgkZ3JpZC1ndXR0ZXJzLWluaXRpYWwpKTtcbn1cblxuLy8gWzFdXG5AZWFjaCAkZ3JpZC1ndXR0ZXIsICRncmlkLWd1dHRlci12YWx1ZSBpbiAkZ3JpZC1ndXR0ZXJzIHtcblxuICAgIC8vIFNraXAgdGhlIGluaXRpYWwgdmFsdWUuXG4gICAgQGlmICgkZ3JpZC1ndXR0ZXIgIT0gJ2luaXRpYWwnKSB7XG5cbiAgICAgICAgLm8tZ3JpZC0tI3skZ3JpZC1ndXR0ZXJ9IHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogIG5lZyhoYWx2ZSgkZ3JpZC1ndXR0ZXItdmFsdWUpKTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAgIG5lZyhoYWx2ZSgkZ3JpZC1ndXR0ZXItdmFsdWUpKTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG5cblxuXG5cblxuLyoqXG4gKiBBIGxheW91dCBpdGVtLCB1c2VkIGxpa2UgYSBjb2x1bW5cbiAqXG4gKiBbMV0gQWRkaXRpb25hbCBtb2RpZmllciBjbGFzc2VzIGZvciBsYXlvdXQgZ3V0dGVycy5cbiAqL1xuLm8tZ3JpZF9fY29sdW1uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1yaWdodDogIGhhbHZlKCRncmlkLWd1dHRlcnMtaW5pdGlhbCk7XG4gICAgcGFkZGluZy1sZWZ0OiAgIGhhbHZlKCRncmlkLWd1dHRlcnMtaW5pdGlhbCk7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMXB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgLy8gWzFdXG4gICAgQGVhY2ggJGdyaWQtZ3V0dGVyLCAkZ3JpZC1ndXR0ZXItdmFsdWUgaW4gJGdyaWQtZ3V0dGVycyB7XG5cbiAgICAgICAgLy8gU2tpcCB0aGUgaW5pdGlhbCB2YWx1ZS5cbiAgICAgICAgQGlmICgkZ3JpZC1ndXR0ZXIgIT0gJ2luaXRpYWwnKSB7XG5cbiAgICAgICAgICAgIC5vLWdyaWQtLSN7JGdyaWQtZ3V0dGVyfSA+ICYge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICBoYWx2ZSgkZ3JpZC1ndXR0ZXItdmFsdWUpO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogICBoYWx2ZSgkZ3JpZC1ndXR0ZXItdmFsdWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH1cblxufVxuXG5cblxuXG5cbi8qKlxuICogTGF5b3V0IENvbHVtbnNcbiAqL1xuQGZvciAkZ3JpZC1pdGVtLXNwYW4gZnJvbSAxIHRocm91Z2ggJGdyaWQtY29sdW1ucyB7XG5cbiAgICAuby1ncmlkX19jb2x1bW4tLSN7JGdyaWQtaXRlbS1zcGFufSB7XG5cbiAgICAgICAgQGluY2x1ZGUgbG9vcC1icmVha3BvaW50cygpIHtcbiAgICAgICAgICAgIHdpZHRoOiAoMTAwJSAvICRncmlkLWNvbHVtbnMpICogJGdyaWQtaXRlbS1zcGFuO1xuICAgICAgICB9XG5cbiAgICB9XG5cbn1cblxuXG5cblxuXG4vLyBDb25kaXRpb25hbGx5IG91dHB1dCBsYXlvdXQgb2Zmc2V0cy5cbkBpZiAkZ3JpZC1vZmZzZXRzIHtcblxuICAgIC8qKlxuICAgICAqIE9mZnNldCBtb2RpZmllcnMgZm9yIGxheW91dCBpdGVtcy5cbiAgICAgKi9cbiAgICBAZm9yICRncmlkLWl0ZW0tc3BhbiBmcm9tIDEgdGhyb3VnaCAkZ3JpZC1jb2x1bW5zIHtcblxuICAgICAgICAuby1ncmlkX19jb2x1bW4tLW9mZnNldC0jeyRncmlkLWl0ZW0tc3Bhbn0ge1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBsb29wLWJyZWFrcG9pbnRzKCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAoMTAwJSAvICRncmlkLWNvbHVtbnMpICogJGdyaWQtaXRlbS1zcGFuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgIH1cblxufVxuXG5cblxuXG5cbi8vIENvbmRpdGlvbmFsbHkgb3V0cHV0IGxheW91dCBzb3VyY2Ugb3JkZXJpbmcuXG5AaWYgJGdyaWQtcHVzaC1hbmQtcHVsbCB7XG5cbiAgICAvKipcbiAgICAgKiBQdXNoIGFuZCBQdWxsIG1vZGlmaWVycyBmb3IgbGF5b3V0IGl0ZW1zLlxuICAgICAqL1xuICAgIEBmb3IgJGdyaWQtaXRlbS1zcGFuIGZyb20gMSB0aHJvdWdoICRncmlkLWNvbHVtbnMge1xuXG4gICAgICAgIC5vLWdyaWRfX2NvbHVtbi0tcHVzaC0jeyRncmlkLWl0ZW0tc3Bhbn0ge1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBsb29wLWJyZWFrcG9pbnRzKCkge1xuICAgICAgICAgICAgICAgIGxlZnQ6ICgxMDAlIC8gJGdyaWQtY29sdW1ucykgKiAkZ3JpZC1pdGVtLXNwYW47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICAgIC5vLWdyaWRfX2NvbHVtbi0tcHVsbC0jeyRncmlkLWl0ZW0tc3Bhbn0ge1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBsb29wLWJyZWFrcG9pbnRzKCkge1xuICAgICAgICAgICAgICAgIGxlZnQ6IG5lZygoMTAwJSAvICRncmlkLWNvbHVtbnMpICogJGdyaWQtaXRlbS1zcGFuKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICB9XG5cbn1cbiIsIi8vL1xuLy8vIENsZWFyZml4IGZvciBtb2Rlcm4gYnJvd3NlcnNcbi8vL1xuLy8vIEBpZ25vcmVcbi8vLyBbMV0gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbi8vLyAgICAgY29udGVudGVkaXRhYmxlIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cbi8vLyAgICAgT3RoZXJ3aXNlIGl0IGNhdXNlcyBzcGFjZSB0byBhcHBlYXIgYXQgdGhlIHRvcCBhbmQgYm90dG9tIG9mIGVsZW1lbnRzXG4vLy8gICAgIHRoYXQgYXJlIGNsZWFyZml4ZWQuXG4vLy8gWzJdIFRoZSB1c2Ugb2YgYHRhYmxlYCByYXRoZXIgdGhhbiBgYmxvY2tgIGlzIG9ubHkgbmVjZXNzYXJ5IGlmIHVzaW5nXG4vLy8gICAgIGA6YmVmb3JlYCB0byBjb250YWluIHRoZSB0b3AtbWFyZ2lucyBvZiBjaGlsZCBlbGVtZW50cy5cbi8vL1xuQG1peGluIGNsZWFyZml4KCkge1xuXG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcgJzsgLy8gWzFdXG4gICAgICAgIGRpc3BsYXk6IHRhYmxlOyAvLyBbMl1cbiAgICB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxuXG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNNRURJQVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyoqXG4gKiBBIGdlbmVyaWMgbGF5b3V0IHdpdGggYW4gaXRlbSBmbG9hdGVkIHRvIHRoZSBzaWRlIGFuZCBjb250ZW50IGJsb2NrIHRoYXRcbiAqIGRvZXNuJ3Qgd3JhcCB1bmRlcm5lYXRoIGl0LlxuICovXG4uby1tZWRpYSB7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcbn1cblxuXG5cblxuXG4vKipcbiAqIFNpZGUgZWxlbWVudCBmbG9hdHMgbGVmdCBhbmQgcHVzaGVzIGNvbnRlbnQgYXdheS4gU3RhY2tzIG9uIG1vYmlsZS5cbiAqXG4gKiBbMV0gRmxpcCB0aGUgaW1hZ2UgdG8gdGhlIHJpZ2h0IHdpdGggbW9kaWZpZXJcbiAqL1xuLm8tbWVkaWFfX2dyYXBoaWMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoJ3hzJykge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IHNwYWNlcigxKTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuXG4gICAgLy8gWzFdXG4gICAgLm8tbWVkaWEtLWZsaXAgJiB7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoJ3hzJykge1xuICAgICAgICAgICAgbWFyZ2luOiAwIDAgMCBzcGFjZXIoMSk7XG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgIH1cblxuICAgIH1cblxufVxuXG5cblxuXG5cbi8qKlxuICogQ29udGVudCBCbG9ja1xuICovXG4uby1tZWRpYV9fY29udGVudCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0xPR09TXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vL1xuLy8gTWFwIG9mIGxvZ29zLCBnb29kIGZvciBidWlsZGluZyBvdXQgc2V2ZXJhbCBhdCBhIHRpbWUgYnkgcGFzc2luZyBhIGxpc3Qgb2Zcbi8vIHByb3BlcnRpZXMgdG8gdGhpcyBjb25maWd1cmF0aW9uIG1hcC4gVGhleSBoYXZlIGEgc2luZ2xlIGluaXRpYWwgc2l6ZSBhbmRcbi8vIGNhbiBzZXQgYWRkaXRpb25hbCBzaXplcyBiYXNlZCBvbiBwcm92aWRlZCBicmVha3BvaW50cyBhbmQgc2NhbGVzLlxuJGxvZ29zLWNvbmZpZzogKFxuICAgICdzYW1wbGUnOiAoXG4gICAgICAgICd3aWR0aCc6IDE1MHB4LFxuICAgICAgICAnaGVpZ2h0JzogNzVweCxcbiAgICAgICAgJ3VybCc6ICdodHRwOi8vc2F0eXIuaW8vMTUweDc1P3RleHQ9TG9nbydcbiAgICApLFxuICAgICdyZXNwb25zaXZlJzogKFxuICAgICAgICAnd2lkdGgnOiAgMjUwcHgsXG4gICAgICAgICdoZWlnaHQnOiAxNTBweCxcbiAgICAgICAgJ3VybCc6ICdodHRwOi8vc2F0eXIuaW8vMjUweDE1MD90ZXh0PUxvZ28nLFxuICAgICAgICAnYnJlYWtwb2ludHMnOiAoXG4gICAgICAgICAgICAnaW5pdGlhbCc6IDAuNCxcbiAgICAgICAgICAgICdzbSc6ICAgICAgMC43NSxcbiAgICAgICAgICAgICdtZCc6ICAgICAgMVxuICAgICAgICApXG4gICAgKVxuKTtcblxuXG5cblxuXG4vKipcbiAqIExvZ28gYmFzZSBjbGFzcy4gQXBwbGllcyBzaGFyZWQgcHJvcGVydGllcyBmb3IgYWxsIGxvZ29zLlxuICpcbiAqIFsxXSBSZWxpZXMgb24gYmFja2dyb3VuZC1zaXplIHRvIHNocmluayBsYXJnZSBsb2dvcyB0byBzbWFsbGVyIHNpemVzLlxuICovXG5cbi5jLWxvZ28ge1xuICAgIEBpbmNsdWRlIGhpZGUtdGV4dCgpO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGJhY2tncm91bmQ6IGNlbnRlciBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOyAvLyBbMV1cbn1cblxuXG4vL1xuLy8gTG9vcCB0aHJvdWdoIHRoZSBsb2dvcyBhbmQgZ2VuZXJhdGUgbW9kaWZpZXJzLlxuLy9cbkBlYWNoICRsb2dvLCAkbG9nby1jb25maWcgaW4gJGxvZ29zLWNvbmZpZyB7XG5cbiAgICAvLyBMb2dvJ3MgcHJvcGVydGllc1xuICAgICRsb2dvLXdpZHRoOiAgbWFwLWdldCgkbG9nby1jb25maWcsICd3aWR0aCcpO1xuICAgICRsb2dvLWhlaWdodDogbWFwLWdldCgkbG9nby1jb25maWcsICdoZWlnaHQnKTtcbiAgICAkbG9nby11cmw6ICAgIG1hcC1nZXQoJGxvZ28tY29uZmlnLCAndXJsJyk7XG5cbiAgICAvLyBEb2VzIHRoZSBsb2dvIGhhdmUgYSBicmVha3BvaW50cyBtYXBcbiAgICAkbG9nby1icmVha3BvaW50cy1jb25maWc6IGlmKG1hcC1oYXMta2V5KCRsb2dvLWNvbmZpZywgJ2JyZWFrcG9pbnRzJyksIG1hcC1nZXQoJGxvZ28tY29uZmlnLCAnYnJlYWtwb2ludHMnKSwgZmFsc2UpO1xuXG4gICAgJGxvZ28tc2NhbGUtaW5pdGlhbDogaWYoJGxvZ28tYnJlYWtwb2ludHMtY29uZmlnLCBtYXAtZ2V0KCRsb2dvLWJyZWFrcG9pbnRzLWNvbmZpZywgJ2luaXRpYWwnKSwgMSk7XG5cbiAgICAuYy1sb2dvLS0jeyRsb2dvfSB7XG4gICAgICAgIHdpZHRoOiAgJGxvZ28td2lkdGggKiAkbG9nby1zY2FsZS1pbml0aWFsO1xuICAgICAgICBoZWlnaHQ6ICRsb2dvLWhlaWdodCAqICRsb2dvLXNjYWxlLWluaXRpYWw7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkbG9nby11cmwpO1xuXG4gICAgICAgIC8vIENoZWNrIGlzIGEgYnJlYWtwb2ludHMgbGlzdCBpcyBwcm92aWRlZFxuICAgICAgICBAaWYgJGxvZ28tYnJlYWtwb2ludHMtY29uZmlnIHtcblxuICAgICAgICAgICAgQGVhY2ggJGxvZ28tYnJlYWtwb2ludCwgJGxvZ28tc2NhbGUtYnJlYWtwb2ludCBpbiAkbG9nby1icmVha3BvaW50cy1jb25maWcge1xuXG4gICAgICAgICAgICAgICAgQGlmICRsb2dvLWJyZWFrcG9pbnQgIT0gJ2luaXRpYWwnIHtcblxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZWRpYSgjeyRsb2dvLWJyZWFrcG9pbnR9KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIHJvdW5kKCRsb2dvLXdpZHRoICogJGxvZ28tc2NhbGUtYnJlYWtwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJvdW5kKCRsb2dvLWhlaWdodCAqICRsb2dvLXNjYWxlLWJyZWFrcG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICB9XG5cbn1cbiIsIi8vL1xuLy8vIEhpZGUgdGV4dCBvbmx5LCBpbnRlbmRlZCBmb3IgaW1hZ2UgcmVwbGFjZW1lbnQuXG4vLy9cbkBtaXhpbiBoaWRlLXRleHQoKSB7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQ6IDAvMCBhO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0ZPUk0gR1JPVVBcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogQSBmb3JtIGdyb3VwIGJsb2NrXG4gKi9cbi5jLWZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbi1ib3R0b206IHNwYWNlcigwLjUpO1xufVxuXG5cblxuXG5cbi5jLWZvcm0tZ3JvdXBfX2xhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogc3BhY2VyKDAuMjUpIDA7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgdGltZXIoJ2Zhc3QnKTtcblxuICAgIC5jLWZvcm0tZ3JvdXAuaGFzLWVycm9yICYge1xuICAgICAgICBjb2xvcjogI2YwMDtcbiAgICB9XG5cbn1cblxuXG5cblxuXG4vKipcbiAqIEZvcm0gZ3JvdXAgaW5wdXRzXG4gKlxuICogWzFdIFdoZW4gdGhlIGZvcm0gaW5wdXQgaXMgbmVzdGVkIGluIGEgY29tbWVudCwgbGlrZSB3aXRoIGEgcmFkaW8gYnV0dG9uIG9yXG4gKiBjaGVja2JveCwgc2V0IHRoZSBpbnB1dCB0byBkaXNwbGF5IGlubGluZSB3aXRoIHRoZSBsYWJlbCdzIHRleHQuXG4gKi9cbi5jLWZvcm0tZ3JvdXBfX2lucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiBlbSgxMHB4KTtcbiAgICBtYXJnaW4tYm90dG9tOiBzcGFjZXIoMC41KTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICB0cmFuc2l0aW9uOiBib3JkZXIgdGltZXIoJ2Zhc3QnKTtcblxuICAgIC5jLWZvcm0tZ3JvdXBfX2xhYmVsICYge1xuICAgICAgICBtYXJnaW46IDAgc3BhY2VyKDAuMjUpIDAgMDtcbiAgICB9XG5cbiAgICAuYy1mb3JtLWdyb3VwLmhhcy1lcnJvciAmIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZjAwO1xuICAgIH1cblxuXG59XG5cblxuLmMtZm9ybS1ncm91cF9faW5wdXQtLWlubGluZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xufVxuXG5cblxuXG5cbi8qKlxuICogR2VuZXJpYyB0ZXh0IGJsb2NrIHRvIGFkZCB0ZXh0IGFmdGVyIGEgZmllbGQsIHVzZWQgd2l0aCB2YWxpZGF0aW9uIGVsZW1lbnRzLlxuICovXG4uYy1mb3JtLWdyb3VwX19oZWxwLWJsb2NrIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IGVtKDEycHgpO1xuICAgIG1hcmdpbjogMCAwIHNwYWNlcigxKTtcbn1cblxuXG5cblxuXG4vKipcbiAqIFZhbGlkYXRpb24gZWxlbWVudCB0byBiZSB1c2VkIHdpdGggaGVscC1ibG9jaydzLiBCZWhhdmlvciBjbGFzc2VzIG9uIHRoZVxuICogcGFyZW50IGRldGVybWluZSB3aGF0IHR5cGUgb2YgdmFsaWRhdGlvbiBpdCBpcy5cbiAqL1xuLmMtZm9ybS1ncm91cF9fdmFsaWRhdGlvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogZW0oMTBweCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgY29sb3IoJ2dyZXknLCAnMjUnKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKGNvbG9yKCdncmV5JywgJzI1JyksIDE1JSk7XG4gICAgY29sb3I6IGNvbG9yKCdncmV5Jyk7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IHRpbWVyKCdmYXN0Jyk7XG5cbiAgICAuYy1mb3JtLWdyb3VwLmhhcy1lcnJvciAmIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZjAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCNmMDAsIDE1JSk7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cblxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjQlVUVE9OU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyoqXG4gKiBCYXNlIGJ1dHRvbiBjbGFzcywgZXh0ZW5kZWQgYnkgbW9kaWZpZXJzLlxuICovXG4uYy1idG4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBjb2xvcjogY29sb3IoJ2xpbmsnKTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAgIHRyYW5zaXRpb246IHRpbWVyKCdmYXN0Jyk7XG59XG5cblxuLyoqXG4gKiBNb2RpZmllcnMgZm9yIHRoZSBidXR0b25zXG4gKi9cbi5jLWJ0bi0tcHJpbWFyeSB7XG4gICAgcGFkZGluZzogZW0oMTBweCkgZW0oMjBweCk7XG4gICAgYm9yZGVyOiAwO1xuICAgIGJhY2tncm91bmQ6IGNvbG9yKCdwcmltYXJ5Jyk7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNOQVZJR0FUSU9OXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIE5hdmlnYXRpb24gbGlzdFxuICovXG4uYy1uYXZfX2xpc3Qge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XG59XG5cblxuXG5cblxuLyoqXG4gKiBOYXZpZ2F0aW9uIExpc3QgaXRlbVxuICpcbiAqIFsxXSBTdGF0ZWZ1bCAnY3VycmVudCcgdmVyc2lvbiBvZiBuYXZpZ2F0aW9uIGl0ZW0uXG4gKi9cbi5jLW5hdl9faXRlbSB7XG4gICAgbWFyZ2luLXJpZ2h0OiBzcGFjZXIoMC41KTtcbiAgICBmbG9hdDogbGVmdDtcbn1cblxuXG5cblxuXG4vKipcbiAqIE5hdmlnYXRpb24gbGlua1xuICovXG4uYy1uYXZfX2xpbmsge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbG9yOiBjb2xvcignbGluaycpO1xuXG4gICAgLmMtbmF2X19pdGVtLmlzLWN1cnJlbnQgJiB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cblxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjSEVBREVSXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4uYy1oZWFkZXIge1xuICAgIHBhZGRpbmc6IHNwYWNlcigxKSAwO1xuICAgIG1hcmdpbi1ib3R0b206IHNwYWNlcigxKTtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0ZPT1RFUlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLmMtZm9vdGVyIHtcbiAgICBwYWRkaW5nOiBzcGFjZXIoMSkgMDtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI1RFWFQgVVRJTElURVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogRm9udCBzaXplIHV0aWxpdGllcywgYnkgZGVmYXVsdCBpdCB1c2VzIHRoZSBzYW1lIHNpemVzIGFzIHRoZSB0YWdzXG4gKi9cbi51LWgxIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2gxJyk7XG59XG5cbi51LWgyIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2gyJyk7XG59XG5cbi51LWgzIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2gzJyk7XG59XG5cbi51LWg0IHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2g0Jyk7XG59XG5cbi51LWg1IHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2g1Jyk7XG59XG5cbi51LWg2IHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJ2g2Jyk7XG59XG5cblxuXG5cblxuLyoqXG4gKiBUZXh0IEFsaWdubWVudFxuICovXG4udS10ZXh0LWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjSU1BR0UgVVRJTElUSUVTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqIEltYWdlJ3MgbWF4IHdpZHRoIGNvbmZvcm1zIHRvIHRoZSBwYXJlbnQncyB3aWR0aC5cbiAqL1xuLnUtaW1nLXJlc3BvbmQge1xuICAgIG1heC13aWR0aDogICAxMDAlO1xuICAgIGhlaWdodDogICAgIGF1dG87XG59XG5cblxuXG5cblxuLyoqXG4gKiBJbWFnZSBtYXRjaGVzIGl0J3MgY29udGFpbmVycyB3aWR0aFxuICovXG4udS1pbWctZnVsbCB7XG4gICAgd2lkdGg6ICAgMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNWSVNJQklMSVRZIFVUSUxJVElFU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyoqXG4gKiBWaXNpYmlsaXR5IGNsYXNzZXMgZm9yIGFsbCBicmVha3BvaW50c1xuICovXG4udS1oaWRkZW4ge1xuXG4gICAgQGluY2x1ZGUgbG9vcC1icmVha3BvaW50cygpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbn1cblxuXG5cblxuXG4vKipcbiAqIFNjcmVlbiBSZWFkZXJzIG9ubHlcbiAqL1xuLnUtc3Itb25seSB7XG4gICAgQGluY2x1ZGUgc3Itb25seSgpO1xufVxuIiwiLy8vXG4vLy8gSGlkZSdzIGNvbnRlbnQgaW4gYSBzY3JlZW4gcmVhZGVyIGZyaWVuZGx5IHdheS5cbi8vL1xuQG1peGluIHNyLW9ubHkoKSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgd2lkdGg6IDFweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */