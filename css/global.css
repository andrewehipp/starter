/**
 * CONTENTS
 *
 * SETTINGS
 * Variables.............Globally-variables
 *
 * TOOLS
 * Functions.............Useful mixins.
 * Mixins................Useful mixins.
 *
 * GENERIC
 * Normalize.............CSS reset.
 * Box-sizing............Better default `box-sizing`.
 *
 * BASE
 * Page..................The Page.
 * Type..................Typepography.
 * Forms.................Form Elements default styles.
 *
 * OBJECTS
 * Container.............Outer Container.
 * Layout................Rows and Columns as Block and Elements.
 * List Unstyled.........Unstyled list.
 * List Inline...........Inline list.
 * Media.................The Media Object.
 *
 * COMPONENTS
 * Buttons...............Button elements.
 * Header................The main page header.
 * Footer................The main page footer.
 *
 * TRUMPS
 * Text Utilities........
 * Img Utilities.........
 * Visibility Utilities..
 */
/**
 * Settings
 */
/**
 * Tools
 */
/**
 * Generic
 */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/*------------------------------------*\
	#BORDER BOX
\*------------------------------------*/
/**
 * Apply global border box.
 */
*, *:before, *:after {
  box-sizing: inherit; }

html {
  box-sizing: border-box; }

/**
 * Base
 */
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * Body
 */
body {
  background: #fff;
  font-size: 14px;
  line-height: 1.42857em;
  -webkit-font-smoothing: antialiased; }

/*------------------------------------*\
	#TYPOGRAPY
\*------------------------------------*/
/**
 * Headings
 */
h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
  line-height: 1.42857em;
  margin: 20px 0; }

h1, .h1 {
  font-size: 2.57143em; }

h2, .h2 {
  font-size: 2.14286em; }

h3, .h3 {
  font-size: 1.71429em; }

h4, .h4 {
  font-size: 1.28571em; }

h5, .h5 {
  font-size: 1em; }

h6, .h6 {
  font-size: 0.85714em; }

/**
 * Paragraphs
 */
p {
  margin: 20px 0; }

/**
 * Lists
 */
ul, ol, dl {
  margin: 20px 0; }

/**
 * Link Styles
 */
a {
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: underline; }

/*------------------------------------*\
    #FORMS
\*------------------------------------*/
/**
 * Error Message
 */
.error {
  display: block;
  margin-top: 5px;
  color: #000;
  background-color: #f2dede;
  font-size: 14px;
  vertical-align: top;
  border-color: #eed3d7;
  padding: 5px 10px;
  border-radius: 2px; }
  .error:before {
    content: '';
    display: inline-block;
    vertical-align: middle;
    width: 14px;
    height: 17px;
    background: url(../img/icon-error.png) no-repeat top center;
    margin-right: 5px; }

/**
 * Objects
 */
/*------------------------------------*\
    #CONTAINER
\*------------------------------------*/
.container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 20px; }

/*------------------------------------*\
	#LAYOUT
\*------------------------------------*/
/**
 * Layout row
 */
.layout {
  margin-right: -10px;
  margin-left: -10px; }
  .layout:before, .layout:after {
    content: " ";
    display: table; }
  .layout:after {
    clear: both; }

/**
     * A layout item, used like a column
     */
.layout__item {
  position: relative;
  width: 100%;
  float: left;
  min-height: 1px;
  padding-right: 10px;
  padding-left: 10px; }

/**
     * Build The layout item span modifiers
     */
.layout__item--1 {
  width: 8.33333%; }

.layout__item--2 {
  width: 16.66667%; }

.layout__item--3 {
  width: 25%; }

.layout__item--4 {
  width: 33.33333%; }

.layout__item--5 {
  width: 41.66667%; }

.layout__item--6 {
  width: 50%; }

.layout__item--7 {
  width: 58.33333%; }

.layout__item--8 {
  width: 66.66667%; }

.layout__item--9 {
  width: 75%; }

.layout__item--10 {
  width: 83.33333%; }

.layout__item--11 {
  width: 91.66667%; }

.layout__item--12 {
  width: 100%; }

@media (min-width: 480px) {
  .layout__item--xs-1 {
    width: 8.33333%; }
  .layout__item--xs-2 {
    width: 16.66667%; }
  .layout__item--xs-3 {
    width: 25%; }
  .layout__item--xs-4 {
    width: 33.33333%; }
  .layout__item--xs-5 {
    width: 41.66667%; }
  .layout__item--xs-6 {
    width: 50%; }
  .layout__item--xs-7 {
    width: 58.33333%; }
  .layout__item--xs-8 {
    width: 66.66667%; }
  .layout__item--xs-9 {
    width: 75%; }
  .layout__item--xs-10 {
    width: 83.33333%; }
  .layout__item--xs-11 {
    width: 91.66667%; }
  .layout__item--xs-12 {
    width: 100%; } }

@media (min-width: 768px) {
  .layout__item--sm-1 {
    width: 8.33333%; }
  .layout__item--sm-2 {
    width: 16.66667%; }
  .layout__item--sm-3 {
    width: 25%; }
  .layout__item--sm-4 {
    width: 33.33333%; }
  .layout__item--sm-5 {
    width: 41.66667%; }
  .layout__item--sm-6 {
    width: 50%; }
  .layout__item--sm-7 {
    width: 58.33333%; }
  .layout__item--sm-8 {
    width: 66.66667%; }
  .layout__item--sm-9 {
    width: 75%; }
  .layout__item--sm-10 {
    width: 83.33333%; }
  .layout__item--sm-11 {
    width: 91.66667%; }
  .layout__item--sm-12 {
    width: 100%; } }

@media (min-width: 1024px) {
  .layout__item--md-1 {
    width: 8.33333%; }
  .layout__item--md-2 {
    width: 16.66667%; }
  .layout__item--md-3 {
    width: 25%; }
  .layout__item--md-4 {
    width: 33.33333%; }
  .layout__item--md-5 {
    width: 41.66667%; }
  .layout__item--md-6 {
    width: 50%; }
  .layout__item--md-7 {
    width: 58.33333%; }
  .layout__item--md-8 {
    width: 66.66667%; }
  .layout__item--md-9 {
    width: 75%; }
  .layout__item--md-10 {
    width: 83.33333%; }
  .layout__item--md-11 {
    width: 91.66667%; }
  .layout__item--md-12 {
    width: 100%; } }

@media (min-width: 1200px) {
  .layout__item--lg-1 {
    width: 8.33333%; }
  .layout__item--lg-2 {
    width: 16.66667%; }
  .layout__item--lg-3 {
    width: 25%; }
  .layout__item--lg-4 {
    width: 33.33333%; }
  .layout__item--lg-5 {
    width: 41.66667%; }
  .layout__item--lg-6 {
    width: 50%; }
  .layout__item--lg-7 {
    width: 58.33333%; }
  .layout__item--lg-8 {
    width: 66.66667%; }
  .layout__item--lg-9 {
    width: 75%; }
  .layout__item--lg-10 {
    width: 83.33333%; }
  .layout__item--lg-11 {
    width: 91.66667%; }
  .layout__item--lg-12 {
    width: 100%; } }

@media (min-width: 1500px) {
  .layout__item--xl-1 {
    width: 8.33333%; }
  .layout__item--xl-2 {
    width: 16.66667%; }
  .layout__item--xl-3 {
    width: 25%; }
  .layout__item--xl-4 {
    width: 33.33333%; }
  .layout__item--xl-5 {
    width: 41.66667%; }
  .layout__item--xl-6 {
    width: 50%; }
  .layout__item--xl-7 {
    width: 58.33333%; }
  .layout__item--xl-8 {
    width: 66.66667%; }
  .layout__item--xl-9 {
    width: 75%; }
  .layout__item--xl-10 {
    width: 83.33333%; }
  .layout__item--xl-11 {
    width: 91.66667%; }
  .layout__item--xl-12 {
    width: 100%; } }

/*------------------------------------*\
    #LIST UNSTYLED
\*------------------------------------*/
/**
 * Remove list styling from list
 */
.list-unstyled {
  list-style: none;
  margin: 0;
  padding: 0; }

/*------------------------------------*\
	#LIST INLINE
\*------------------------------------*/
/**
 * Inline list
 */
.list-inline {
  list-style: none;
  margin: 0;
  padding: 0; }
  .list-inline > li {
    display: inline-block;
    padding: 0 2px;
    vertical-align: top; }

/*------------------------------------*\
	#MEDIA
\*------------------------------------*/
/**
 * A generic layout with an item floated to the side and content block that
 * doesn't wrap underneath it.
 */
.media {
  margin-bottom: 1em; }
  .media:before, .media:after {
    content: " ";
    display: table; }
  .media:after {
    clear: both; }

/**
	 * Side element floats left and pushes content away. Stacks on mobile.
	 *
	 * [1] Flip the image to the right with modifier
	 */
.media__img {
  display: block;
  margin: 1em 0 0; }
  @media (min-width: 480px) {
    .media__img {
      max-width: 30%;
      float: left;
      margin: 0 1em 1em 0; } }
  @media (min-width: 480px) {
    .media--flip .media__img {
      float: right;
      margin: 0 0 1em 1em; } }

/**
	 * Content Block
	 */
.media__content {
  overflow: hidden; }

/**
 * Components
 */
/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
.btn {
  display: inline-block;
  -webkit-font-smoothing: antialiased; }

/*------------------------------------*\
    #HEADER
\*------------------------------------*/
/**
     * Optional Title & Description
     */
/*------------------------------------*\
    #FOOTER
\*------------------------------------*/
/**
     * Optional Title & Description
     */
/**
 * Trumps
 */
/*------------------------------------*\
    #TEXT UTILITES
\*------------------------------------*/
/**
 * Generate color classes for each color in $colors
 */
.text-blue {
  color: blue; }

.text-red {
  color: red; }

/*------------------------------------*\
    #IMAGE UTILITIES
\*------------------------------------*/
.img-respond {
  max-width: 100%;
  height: auto; }

.img-full {
  width: 100%;
  height: auto; }

/*------------------------------------*\
    #VISIBILITY UTILITIES
\*------------------------------------*/
/**
 * Hide the content
 */
.hidden {
  display: none; }

/**
 * Screen Readers only
 */
.sr-only {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden; }


/*# sourceMappingURL=data:application/json;base64, */