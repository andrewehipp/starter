/*------------------------------------*\
    #BORDER BOX
\*------------------------------------*/
/**
 * Apply global border box.
 */
*, *:before, *:after {
  box-sizing: inherit; }

html {
  box-sizing: border-box; }

/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * Body
 */
body {
  background: #fff;
  color: #000;
  font-family: sans-serif;
  font-size: 14px;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/*------------------------------------*\
    #TYPOGRAPY
\*------------------------------------*/
/**
 * Headings
 *
 * In most cases you should avoid styling a specific heading type to have
 * custom distinct styles that would apply to all headings of that type.
 * Instead create a new component like c-heading or c-title. This may not
 * be the case when a CMS needs default headings to appear a specific way.
 */
h1, .u-h1, h2, .u-h2, h3, .u-h3, h4, .u-h4, h5, .u-h5, h6, .u-h6 {
  margin-bottom: 20px;
  line-height: 1.5; }

h1, .u-h1 {
  font-size: 2.57143em; }

h2, .u-h2 {
  font-size: 2.14286em; }

h3, .u-h3 {
  font-size: 1.71429em; }

h4, .u-h4 {
  font-size: 1.28571em; }

h5, .u-h5 {
  font-size: 1em; }

h6, .u-h6 {
  font-size: 0.85714em; }

/**
 * Paragraphs
 */
p {
  margin: 0 0 20px; }

/**
 * Lists
 */
ul, ol, dl {
  margin: 0 0 20px; }

/**
 * Link Styles
 */
a {
  color: #337ab7;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: underline; }

/**
 * Images
 *
 * [1] remove spacing below inline images.
 */
img {
  vertical-align: middle;
  margin: 0 0 20px; }

/**
 * Horizontal Rule
 */
hr {
  margin: 0 0 20px;
  border: solid #bfbfbf;
  border-width: 0 0 1px; }

/*------------------------------------*\
    #FORMS
\*------------------------------------*/
input, textarea, select {
  border: 1px solid #bfbfbf;
  border-radius: 0;
  background: #fff; }

/*------------------------------------*\
    #WRAP
\*------------------------------------*/
/**
 * A simple wrapper that crops all content that bleeds out of it
 * Usefull for preventing scrolling on the body.
 */
.o-wrap {
  overflow: hidden; }

/*------------------------------------*\
    #CONTAINER
\*------------------------------------*/
/**
 * An outer container for site content. A container should never be a child of
 * instance of it's self.
 */
.o-container {
  padding: 0 20px;
  margin: 0 auto;
  max-width: 1280px; }

/*------------------------------------*\
    #LIST UNSTYLED
\*------------------------------------*/
/**
 * Remove list styling from list
 */
.o-list-unstyled {
  list-style: none;
  margin: 0;
  padding: 0; }

/*------------------------------------*\
    #LIST INLINE
\*------------------------------------*/
/**
 * List with direct children displaying inline.
 * [1] All items except the first have padding.
 */
.o-list-inline {
  list-style: none;
  margin: 0;
  padding: 0; }
  .o-list-inline > li {
    display: inline-block;
    vertical-align: middle; }
    .o-list-inline > li:not(:first-child) {
      padding-left: 10px; }

/*------------------------------------*\
    #ISLAND
\*------------------------------------*/
/**
 * Add a nice gap below a block of content.
 */
.o-island {
  margin-bottom: 60px; }

/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * Layout row
 *
 * [1] Additional modifier classes for layout gutters.
 */
.o-layout {
  margin-right: -10px;
  margin-left: -10px; }
  .o-layout:before, .o-layout:after {
    content: ' ';
    display: table; }
  .o-layout:after {
    clear: both; }

/**
 * A layout item, used like a column
 *
 * [1] Additional modifier classes for layout gutters.
 */
.o-layout__item {
  position: relative;
  padding-right: 10px;
  padding-left: 10px;
  width: 100%;
  min-height: 1px;
  float: left; }

/**
 * Layout Columns
 */
.o-layout__item--1 {
  width: 8.33333%; }

.o-layout__item--2 {
  width: 16.66667%; }

.o-layout__item--3 {
  width: 25%; }

.o-layout__item--4 {
  width: 33.33333%; }

.o-layout__item--5 {
  width: 41.66667%; }

.o-layout__item--6 {
  width: 50%; }

.o-layout__item--7 {
  width: 58.33333%; }

.o-layout__item--8 {
  width: 66.66667%; }

.o-layout__item--9 {
  width: 75%; }

.o-layout__item--10 {
  width: 83.33333%; }

.o-layout__item--11 {
  width: 91.66667%; }

.o-layout__item--12 {
  width: 100%; }

/**
 * Do the same as above but for each breakpoint
 */
@media (min-width: 480px) {
  .o-layout__item--1\@xs {
    width: 8.33333%; }
  .o-layout__item--2\@xs {
    width: 16.66667%; }
  .o-layout__item--3\@xs {
    width: 25%; }
  .o-layout__item--4\@xs {
    width: 33.33333%; }
  .o-layout__item--5\@xs {
    width: 41.66667%; }
  .o-layout__item--6\@xs {
    width: 50%; }
  .o-layout__item--7\@xs {
    width: 58.33333%; }
  .o-layout__item--8\@xs {
    width: 66.66667%; }
  .o-layout__item--9\@xs {
    width: 75%; }
  .o-layout__item--10\@xs {
    width: 83.33333%; }
  .o-layout__item--11\@xs {
    width: 91.66667%; }
  .o-layout__item--12\@xs {
    width: 100%; } }

@media (min-width: 768px) {
  .o-layout__item--1\@sm {
    width: 8.33333%; }
  .o-layout__item--2\@sm {
    width: 16.66667%; }
  .o-layout__item--3\@sm {
    width: 25%; }
  .o-layout__item--4\@sm {
    width: 33.33333%; }
  .o-layout__item--5\@sm {
    width: 41.66667%; }
  .o-layout__item--6\@sm {
    width: 50%; }
  .o-layout__item--7\@sm {
    width: 58.33333%; }
  .o-layout__item--8\@sm {
    width: 66.66667%; }
  .o-layout__item--9\@sm {
    width: 75%; }
  .o-layout__item--10\@sm {
    width: 83.33333%; }
  .o-layout__item--11\@sm {
    width: 91.66667%; }
  .o-layout__item--12\@sm {
    width: 100%; } }

@media (min-width: 1024px) {
  .o-layout__item--1\@md {
    width: 8.33333%; }
  .o-layout__item--2\@md {
    width: 16.66667%; }
  .o-layout__item--3\@md {
    width: 25%; }
  .o-layout__item--4\@md {
    width: 33.33333%; }
  .o-layout__item--5\@md {
    width: 41.66667%; }
  .o-layout__item--6\@md {
    width: 50%; }
  .o-layout__item--7\@md {
    width: 58.33333%; }
  .o-layout__item--8\@md {
    width: 66.66667%; }
  .o-layout__item--9\@md {
    width: 75%; }
  .o-layout__item--10\@md {
    width: 83.33333%; }
  .o-layout__item--11\@md {
    width: 91.66667%; }
  .o-layout__item--12\@md {
    width: 100%; } }

@media (min-width: 1200px) {
  .o-layout__item--1\@lg {
    width: 8.33333%; }
  .o-layout__item--2\@lg {
    width: 16.66667%; }
  .o-layout__item--3\@lg {
    width: 25%; }
  .o-layout__item--4\@lg {
    width: 33.33333%; }
  .o-layout__item--5\@lg {
    width: 41.66667%; }
  .o-layout__item--6\@lg {
    width: 50%; }
  .o-layout__item--7\@lg {
    width: 58.33333%; }
  .o-layout__item--8\@lg {
    width: 66.66667%; }
  .o-layout__item--9\@lg {
    width: 75%; }
  .o-layout__item--10\@lg {
    width: 83.33333%; }
  .o-layout__item--11\@lg {
    width: 91.66667%; }
  .o-layout__item--12\@lg {
    width: 100%; } }

@media (min-width: 1500px) {
  .o-layout__item--1\@xl {
    width: 8.33333%; }
  .o-layout__item--2\@xl {
    width: 16.66667%; }
  .o-layout__item--3\@xl {
    width: 25%; }
  .o-layout__item--4\@xl {
    width: 33.33333%; }
  .o-layout__item--5\@xl {
    width: 41.66667%; }
  .o-layout__item--6\@xl {
    width: 50%; }
  .o-layout__item--7\@xl {
    width: 58.33333%; }
  .o-layout__item--8\@xl {
    width: 66.66667%; }
  .o-layout__item--9\@xl {
    width: 75%; }
  .o-layout__item--10\@xl {
    width: 83.33333%; }
  .o-layout__item--11\@xl {
    width: 91.66667%; }
  .o-layout__item--12\@xl {
    width: 100%; } }

/*------------------------------------*\
    #MEDIA
\*------------------------------------*/
/**
 * A generic layout with an item floated to the side and content block that
 * doesn't wrap underneath it.
 */
.o-media {
  margin-bottom: 20px; }
  .o-media:before, .o-media:after {
    content: ' ';
    display: table; }
  .o-media:after {
    clear: both; }

/**
 * Side element floats left and pushes content away. Stacks on mobile.
 *
 * [1] Flip the image to the right with modifier
 */
.o-media__graphic {
  display: block;
  margin: 20px 0 0; }
  @media (min-width: 480px) {
    .o-media__graphic {
      margin: 0 20px 20px 0;
      max-width: 30%;
      float: left; } }
  @media (min-width: 480px) {
    .o-media--flip .o-media__graphic {
      margin: 0 0 20px 20px;
      float: right; } }

/**
 * Content Block
 */
.o-media__content {
  overflow: hidden; }

/*------------------------------------*\
    #LOGOS
\*------------------------------------*/
/**
 * Logo base class. Applies shared properties for all logos.
 *
 * [1] Relies on background-size to shrink large logos to smaller sizes.
 */
.c-logo {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  display: inline-block;
  vertical-align: middle;
  background: center no-repeat;
  background-size: contain; }

.c-logo--sample {
  width: 39px;
  height: 52px;
  background-image: url('../img/logo-sample.jpg'); }

.c-logo--responsive {
  width: 236px;
  height: 118px;
  background-image: url('../img/logo-responsive.png'); }
  @media (min-width: 768px) {
    .c-logo--responsive {
      width: 118px;
      height: 59px; } }

/*------------------------------------*\
    #FORM GROUP
\*------------------------------------*/
/**
 * A form group block
 */
.c-form-group {
  margin-bottom: 10px; }

.c-form-group__label {
  display: block;
  cursor: pointer;
  padding: 5px 0; }

/**
 * Form group inputs
 *
 * [1] When the form input is nested in a comment, like with a radio button or
 * checkbox, set the input to display inline with the label's text.
 */
.c-form-group__input {
  display: block;
  padding: 0.71429em;
  margin-bottom: 10px;
  width: 100%;
  font-family: sans-serif;
  font-size: 14px;
  line-height: 1.2; }
  .c-form-group__label .c-form-group__input {
    margin: 0 5px 0 0; }

.c-form-group__input--inline {
  display: inline-block;
  width: auto; }

/**
 * Generic text block to add text after a field, used with validation elements.
 */
.c-form-group__help-block {
  display: block;
  font-size: 0.85714em; }
  .c-form-group__help-block:not(:last-child) {
    margin: 0 0 5px; }

/**
 * Validation element to be used with help-block's. Behavior classes on the
 * parent determine what type of validation it is.
 */
.c-form-group__validation {
  display: block;
  padding: 0.71429em;
  border: 1px solid #bfbfbf;
  background-color: #e5e5e5;
  color: #7f7f7f;
  font-weight: bold;
  position: relative; }

/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/**
 * Base button class, extended by modifiers.
 */
.c-btn {
  display: inline-block;
  color: #337ab7;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/**
 * Modifiers for the buttons
 */
.c-btn--primary {
  padding: 0.71429em 1.42857em;
  border: 0;
  background: #337ab7;
  color: #fff;
  font-weight: bold; }

/*------------------------------------*\
    #NAVIGATION
\*------------------------------------*/
/**
 * Navigation list
 */
.c-nav__list {
  margin: 0 0 20px; }
  .c-nav__list:before, .c-nav__list:after {
    content: ' ';
    display: table; }
  .c-nav__list:after {
    clear: both; }

/**
 * Navigation List item
 *
 * [1] Stateful 'current' version of navigation item.
 */
.c-nav__item {
  margin-right: 10px;
  float: left; }

/**
 * Navigation link
 */
.c-nav__link {
  display: block;
  color: #337ab7; }
  .c-nav__item.is-current .c-nav__link {
    text-decoration: underline; }

/*------------------------------------*\
    #HEADER
\*------------------------------------*/
.c-header {
  padding: 20px 0; }

/*------------------------------------*\
    #FOOTER
\*------------------------------------*/
.c-footer {
  padding: 20px 0; }

/*------------------------------------*\
    #TEXT UTILITES
\*------------------------------------*/
/**
 * Color utilities to force a specific color.
 */
.u-text-link {
  color: #337ab7; }

.u-text-grey-50 {
  color: #7f7f7f; }

/**
 * Text Alignment
 */
.u-text-center {
  text-align: center; }

/*------------------------------------*\
    #IMAGE UTILITIES
\*------------------------------------*/
/**
 * Image's max width conforms to the parent's width.
 */
.u-img-respond {
  max-width: 100%;
  height: auto; }

/**
 * Image matches it's containers width
 */
.u-img-full {
  width: 100%;
  height: auto; }

/*------------------------------------*\
    #VISIBILITY UTILITIES
\*------------------------------------*/
/**
 * Visibility classes for all breakpoints
 */
.u-hidden {
  display: none; }

@media (min-width: 480px) {
  .u-hidden\@xs {
    display: none; } }

@media (min-width: 768px) {
  .u-hidden\@sm {
    display: none; } }

@media (min-width: 1024px) {
  .u-hidden\@md {
    display: none; } }

@media (min-width: 1200px) {
  .u-hidden\@lg {
    display: none; } }

@media (min-width: 1500px) {
  .u-hidden\@xl {
    display: none; } }

/**
 * Screen Readers only
 */
.u-sr-only {
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  padding: 0;
  border: 0;
  position: absolute; }


/*# sourceMappingURL=data:application/json;base64, */