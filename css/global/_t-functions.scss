////
/// FUNCTIONS
////


///
/// Return EM value
///
/// @param {pixel} $px - Target equivalent pixel value to output as ems.
/// @param {pixel} $base [$base-font-size] - Base pixel value to calculate against.
///
/// @require {variable} $base-font-size
///
@function em($px, $base: $base-font-size) {

    @return ($px / $base) * 1em;

}





///
/// Returns the number as a negative.
///
/// @param {number} $number
///
@function negative($number) {
    @return -($number);
}

/// @alias negative
@function neg($args...) {
    @return negative($args...);
}


///
/// Returns number as rounded half the number passed.
///
/// @param {number} $number
///
@function halve($number) {
    @return round($number / 2);
}

/// @alias halve
@function half($args...) {
    @return halve($args...);
}


///
/// Returns number as rounded quarter the number passed.
///
/// @param {number} $number
///
@function quarter($number) {
    @return round($number / 4);
}

/// @alias quarter
@function fourth($args...) {
    @return quarter($args...);
}


///
/// Returns number as rounded double the number passed.
///
/// @param {number} $number
///
@function double($number) {
    @return round($number * 2);
}


///
/// Returns number as rounded quadruple the number passed.
///
/// @param {number} $number
///
@function quadruple($number) {
    @return round($number * 4);
}





///
/// Retrieve color from sass map $colors
///
/// @param {string} $color - Name of color to return from $colors.
///
/// @require {variable} $colors
///
/// @ignore
/// [1] Check if $color exists in $colors.
/// [2] If not pass an error.
///
@function color($color) {

    // [1]
    @if map-has-key($colors, $color) {

        @return map-get($colors, $color);

    } @else {

        @warn "'#{$color}' is not an available version of #{$colors}. (#{map-keys($colors)})"; // [2]

        @return null;

    }

}





///
/// Retrieve z-index value from sass map $z-index
///
/// @param {string} $element - Element to return z-index value from $z-index.
///
/// @require {variable} $z-index
///
/// @ignore
/// [1] Check if $element exists in $z-index.
/// [2] If not pass an error.
///
@function z($element) {

    // [1]
    @if map-has-key($z-index, $element) {

        @return map-get($z-index, $element);

    } @else {

        @warn "'#{$element}' does not have a value set in  #{$z-index}. (#{map-keys($z-index)})"; // [2]

        @return null;

    }

}
